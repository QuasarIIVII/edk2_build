# 0 "/home/enyephy/edk2/edk2/UefiCpuPkg/Library/CpuExceptionHandlerLib/Ia32/ExceptionHandlerAsm.nasm"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/home/enyephy/edk2/edk2/Build/OvmfIa32/RELEASE_GCC5/IA32/UefiCpuPkg/Library/CpuExceptionHandlerLib/SecPeiCpuExceptionHandlerLib/DEBUG/AutoGen.h" 1
# 16 "/home/enyephy/edk2/edk2/Build/OvmfIa32/RELEASE_GCC5/IA32/UefiCpuPkg/Library/CpuExceptionHandlerLib/SecPeiCpuExceptionHandlerLib/DEBUG/AutoGen.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/PiPei.h" 1
# 17 "/home/enyephy/edk2/edk2/MdePkg/Include/PiPei.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiBaseType.h" 1
# 16 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiBaseType.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h" 1
# 21 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Ia32/ProcessorBind.h" 1
# 163 "/home/enyephy/edk2/edk2/MdePkg/Include/Ia32/ProcessorBind.h"
typedef unsigned long long UINT64;



typedef long long INT64;



typedef unsigned int UINT32;



typedef int INT32;



typedef unsigned short UINT16;




typedef unsigned short CHAR16;



typedef short INT16;




typedef unsigned char BOOLEAN;



typedef unsigned char UINT8;



typedef char CHAR8;



typedef signed char INT8;






typedef UINT32 UINTN;




typedef INT32 INTN;
# 22 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h" 2
# 213 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
typedef struct {
  UINT32 Data1;
  UINT16 Data2;
  UINT16 Data3;
  UINT8 Data4[8];
} GUID;




typedef struct {
  UINT8 Addr[4];
} IPv4_ADDRESS;




typedef struct {
  UINT8 Addr[16];
} IPv6_ADDRESS;




typedef UINT64 PHYSICAL_ADDRESS;




typedef struct _LIST_ENTRY LIST_ENTRY;




struct _LIST_ENTRY {
  LIST_ENTRY *ForwardLink;
  LIST_ENTRY *BackLink;
};
# 626 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
typedef __builtin_va_list VA_LIST;
# 711 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
typedef UINTN *BASE_LIST;
# 816 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
_Static_assert (sizeof (BOOLEAN) == 1, "sizeof (BOOLEAN) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT8) == 1, "sizeof (INT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT8) == 1, "sizeof (UINT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT16) == 2, "sizeof (INT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT16) == 2, "sizeof (UINT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT32) == 4, "sizeof (INT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT32) == 4, "sizeof (UINT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT64) == 8, "sizeof (INT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT64) == 8, "sizeof (UINT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR8) == 1, "sizeof (CHAR8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR16) == 2, "sizeof (CHAR16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (L'A') == 2, "sizeof (L'A') does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (L"A") == 4, "sizeof (L\"A\") does not meet UEFI Specification Data Type requirements");

_Static_assert (_Alignof (BOOLEAN) == sizeof (BOOLEAN), "Alignment of BOOLEAN does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (INT8) == sizeof (INT8), "Alignment of INT8 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (UINT8) == sizeof (UINT8), "Alignment of INT16 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (INT16) == sizeof (INT16), "Alignment of INT16 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (UINT16) == sizeof (UINT16), "Alignment of UINT16 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (INT32) == sizeof (INT32), "Alignment of INT32 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (UINT32) == sizeof (UINT32), "Alignment of UINT32 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (INT64) == sizeof (INT64), "Alignment of INT64 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (UINT64) == sizeof (UINT64), "Alignment of UINT64 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (CHAR8) == sizeof (CHAR8), "Alignment of CHAR8 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (CHAR16) == sizeof (CHAR16), "Alignment of CHAR16 does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (INTN) == sizeof (INTN), "Alignment of INTN does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (UINTN) == sizeof (UINTN), "Alignment of UINTN does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (void *) == sizeof (void *), "Alignment of VOID * does not meet UEFI Specification Data Type requirements");
# 852 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
typedef enum {
  __VerifyUint8EnumValue = 0xff
} __VERIFY_UINT8_ENUM_SIZE;

typedef enum {
  __VerifyUint16EnumValue = 0xffff
} __VERIFY_UINT16_ENUM_SIZE;

typedef enum {
  __VerifyInt32EnumValue = 0x7fffffff
} __VERIFY_INT32_ENUM_SIZE;

_Static_assert (sizeof (__VERIFY_UINT8_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT16_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_INT32_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");

_Static_assert (_Alignof (__VERIFY_UINT8_ENUM_SIZE) == sizeof (__VERIFY_UINT8_ENUM_SIZE), "Alignment of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (__VERIFY_UINT16_ENUM_SIZE) == sizeof (__VERIFY_UINT16_ENUM_SIZE), "Alignment of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (_Alignof (__VERIFY_INT32_ENUM_SIZE) == sizeof (__VERIFY_INT32_ENUM_SIZE), "Alignment of enum does not meet UEFI Specification Data Type requirements");
# 1026 "/home/enyephy/edk2/edk2/MdePkg/Include/Base.h"
typedef UINTN RETURN_STATUS;
# 17 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiBaseType.h" 2
# 25 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiBaseType.h"
typedef GUID EFI_GUID;



typedef RETURN_STATUS EFI_STATUS;



typedef void *EFI_HANDLE;



typedef void *EFI_EVENT;



typedef UINTN EFI_TPL;



typedef UINT64 EFI_LBA;




typedef UINT64 EFI_PHYSICAL_ADDRESS;




typedef UINT64 EFI_VIRTUAL_ADDRESS;
# 68 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiBaseType.h"
typedef struct {
  UINT16 Year;
  UINT8 Month;
  UINT8 Day;
  UINT8 Hour;
  UINT8 Minute;
  UINT8 Second;
  UINT8 Pad1;
  UINT32 Nanosecond;
  INT16 TimeZone;
  UINT8 Daylight;
  UINT8 Pad2;
} EFI_TIME;




typedef IPv4_ADDRESS EFI_IPv4_ADDRESS;




typedef IPv6_ADDRESS EFI_IPv6_ADDRESS;




typedef struct {
  UINT8 Addr[32];
} EFI_MAC_ADDRESS;





typedef union {
  UINT32 Addr[4];
  EFI_IPv4_ADDRESS v4;
  EFI_IPv6_ADDRESS v6;
} EFI_IP_ADDRESS;
# 18 "/home/enyephy/edk2/edk2/MdePkg/Include/PiPei.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h" 1
# 15 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h" 1
# 34 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Guid/WinCertificate.h" 1
# 24 "/home/enyephy/edk2/edk2/MdePkg/Include/Guid/WinCertificate.h"
typedef struct {




  UINT32 dwLength;




  UINT16 wRevision;





  UINT16 wCertificateType;






} WIN_CERTIFICATE;
# 58 "/home/enyephy/edk2/edk2/MdePkg/Include/Guid/WinCertificate.h"
typedef struct {
  EFI_GUID HashType;
  UINT8 PublicKey[256];
  UINT8 Signature[256];
} EFI_CERT_BLOCK_RSA_2048_SHA256;




typedef struct {




  WIN_CERTIFICATE Hdr;




  EFI_GUID CertType;






  UINT8 CertData[1];
} WIN_CERTIFICATE_UEFI_GUID;
# 95 "/home/enyephy/edk2/edk2/MdePkg/Include/Guid/WinCertificate.h"
typedef struct {




  WIN_CERTIFICATE Hdr;




  EFI_GUID HashAlgorithm;
# 116 "/home/enyephy/edk2/edk2/MdePkg/Include/Guid/WinCertificate.h"
} WIN_CERTIFICATE_EFI_PKCS1_15;

extern EFI_GUID gEfiCertTypeRsa2048Sha256Guid;
# 35 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h" 2



typedef enum {



  EfiReservedMemoryType,




  EfiLoaderCode,




  EfiLoaderData,



  EfiBootServicesCode,




  EfiBootServicesData,



  EfiRuntimeServicesCode,




  EfiRuntimeServicesData,



  EfiConventionalMemory,



  EfiUnusableMemory,



  EfiACPIReclaimMemory,



  EfiACPIMemoryNVS,




  EfiMemoryMappedIO,




  EfiMemoryMappedIOPortSpace,



  EfiPalCode,




  EfiPersistentMemory,




  EfiUnacceptedMemoryType,
  EfiMaxMemoryType,
# 123 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
  MEMORY_TYPE_OEM_RESERVED_MIN = 0x70000000,
  MEMORY_TYPE_OEM_RESERVED_MAX = 0x7FFFFFFF,
  MEMORY_TYPE_OS_RESERVED_MIN = 0x80000000,
  MEMORY_TYPE_OS_RESERVED_MAX = 0xFFFFFFFF
} EFI_MEMORY_TYPE;




typedef enum {






  EfiResetCold,





  EfiResetWarm,





  EfiResetShutdown,







  EfiResetPlatformSpecific
} EFI_RESET_TYPE;




typedef struct {





  UINT64 Signature;






  UINT32 Revision;



  UINT32 HeaderSize;




  UINT32 CRC32;



  UINT32 Reserved;
} EFI_TABLE_HEADER;
# 209 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
typedef struct {






  UINT64 MonotonicCount;
# 225 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
  WIN_CERTIFICATE_UEFI_GUID AuthInfo;
} EFI_VARIABLE_AUTHENTICATION;
# 236 "/home/enyephy/edk2/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h"
typedef struct {




  EFI_TIME TimeStamp;



  WIN_CERTIFICATE_UEFI_GUID AuthInfo;
} EFI_VARIABLE_AUTHENTICATION_2;
# 16 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 1
# 15 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h" 1
# 18 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef UINT32 EFI_FV_FILE_ATTRIBUTES;
# 30 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef UINT32 EFI_FVB_ATTRIBUTES_2;
# 85 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef struct {



  UINT32 NumBlocks;



  UINT32 Length;
} EFI_FV_BLOCK_MAP_ENTRY;




typedef struct {




  UINT8 ZeroVector[16];



  EFI_GUID FileSystemGuid;



  UINT64 FvLength;



  UINT32 Signature;



  EFI_FVB_ATTRIBUTES_2 Attributes;



  UINT16 HeaderLength;



  UINT16 Checksum;




  UINT16 ExtHeaderOffset;



  UINT8 Reserved[1];




  UINT8 Revision;




  EFI_FV_BLOCK_MAP_ENTRY BlockMap[1];
} EFI_FIRMWARE_VOLUME_HEADER;
# 160 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h"
typedef struct {



  EFI_GUID FvName;



  UINT32 ExtHeaderSize;
} EFI_FIRMWARE_VOLUME_EXT_HEADER;




typedef struct {



  UINT16 ExtEntrySize;



  UINT16 ExtEntryType;
} EFI_FIRMWARE_VOLUME_EXT_ENTRY;





typedef struct {



  EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;




  UINT32 TypeMask;





} EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE;







typedef struct {



  EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;



  EFI_GUID FormatType;





} EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE;







typedef struct {



  EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;





  UINT32 UsedSize;
} EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE;
# 16 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h" 1
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef union {
  struct {





    UINT8 Header;
# 36 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
    UINT8 File;
  } Checksum;



  UINT16 Checksum16;
} EFI_FFS_INTEGRITY_CHECK;







typedef UINT8 EFI_FV_FILETYPE;
typedef UINT8 EFI_FFS_FILE_ATTRIBUTES;
typedef UINT8 EFI_FFS_FILE_STATE;
# 106 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {



  EFI_GUID Name;



  EFI_FFS_INTEGRITY_CHECK IntegrityCheck;



  EFI_FV_FILETYPE Type;



  EFI_FFS_FILE_ATTRIBUTES Attributes;



  UINT8 Size[3];



  EFI_FFS_FILE_STATE State;
} EFI_FFS_FILE_HEADER;

typedef struct {





  EFI_GUID Name;




  EFI_FFS_INTEGRITY_CHECK IntegrityCheck;




  EFI_FV_FILETYPE Type;




  EFI_FFS_FILE_ATTRIBUTES Attributes;
# 163 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
  UINT8 Size[3];




  EFI_FFS_FILE_STATE State;





  UINT64 ExtendedSize;
} EFI_FFS_FILE_HEADER2;
# 193 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef UINT8 EFI_SECTION_TYPE;
# 230 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {




  UINT8 Size[3];
  EFI_SECTION_TYPE Type;



} EFI_COMMON_SECTION_HEADER;

typedef struct {




  UINT8 Size[3];

  EFI_SECTION_TYPE Type;





  UINT32 ExtendedSize;
} EFI_COMMON_SECTION_HEADER2;





typedef EFI_COMMON_SECTION_HEADER EFI_COMPATIBILITY16_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_COMPATIBILITY16_SECTION2;
# 274 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {



  EFI_COMMON_SECTION_HEADER CommonHeader;



  UINT32 UncompressedLength;



  UINT8 CompressionType;
} EFI_COMPRESSION_SECTION;

typedef struct {



  EFI_COMMON_SECTION_HEADER2 CommonHeader;



  UINT32 UncompressedLength;



  UINT8 CompressionType;
} EFI_COMPRESSION_SECTION2;
# 313 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef EFI_COMMON_SECTION_HEADER EFI_DISPOSABLE_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_DISPOSABLE_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_DXE_DEPEX_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_DXE_DEPEX_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_FIRMWARE_VOLUME_IMAGE_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_FIRMWARE_VOLUME_IMAGE_SECTION2;




typedef struct {



  EFI_COMMON_SECTION_HEADER CommonHeader;



  EFI_GUID SubTypeGuid;
} EFI_FREEFORM_SUBTYPE_GUID_SECTION;

typedef struct {



  EFI_COMMON_SECTION_HEADER2 CommonHeader;



  EFI_GUID SubTypeGuid;
} EFI_FREEFORM_SUBTYPE_GUID_SECTION2;
# 361 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef struct {



  EFI_COMMON_SECTION_HEADER CommonHeader;



  EFI_GUID SectionDefinitionGuid;



  UINT16 DataOffset;



  UINT16 Attributes;
} EFI_GUID_DEFINED_SECTION;

typedef struct {



  EFI_COMMON_SECTION_HEADER2 CommonHeader;



  EFI_GUID SectionDefinitionGuid;



  UINT16 DataOffset;



  UINT16 Attributes;
} EFI_GUID_DEFINED_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_PE32_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PE32_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_PEI_DEPEX_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PEI_DEPEX_SECTION2;
# 420 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef EFI_COMMON_SECTION_HEADER EFI_PIC_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PIC_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_TE_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_TE_SECTION2;




typedef EFI_COMMON_SECTION_HEADER EFI_RAW_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_RAW_SECTION2;
# 443 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiFirmwareFile.h"
typedef EFI_COMMON_SECTION_HEADER EFI_SMM_DEPEX_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_SMM_DEPEX_SECTION2;





typedef struct {
  EFI_COMMON_SECTION_HEADER CommonHeader;




  CHAR16 FileNameString[1];
} EFI_USER_INTERFACE_SECTION;

typedef struct {
  EFI_COMMON_SECTION_HEADER2 CommonHeader;
  CHAR16 FileNameString[1];
} EFI_USER_INTERFACE_SECTION2;





typedef struct {
  EFI_COMMON_SECTION_HEADER CommonHeader;
  UINT16 BuildNumber;




  CHAR16 VersionString[1];
} EFI_VERSION_SECTION;

typedef struct {
  EFI_COMMON_SECTION_HEADER2 CommonHeader;




  UINT16 BuildNumber;
  CHAR16 VersionString[1];
} EFI_VERSION_SECTION2;
# 17 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiBootMode.h" 1
# 18 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiBootMode.h"
typedef UINT32 EFI_BOOT_MODE;
# 18 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiHob.h" 1
# 36 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  UINT16 HobType;



  UINT16 HobLength;



  UINT32 Reserved;
} EFI_HOB_GENERIC_HEADER;
# 60 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  EFI_HOB_GENERIC_HEADER Header;





  UINT32 Version;



  EFI_BOOT_MODE BootMode;




  EFI_PHYSICAL_ADDRESS EfiMemoryTop;



  EFI_PHYSICAL_ADDRESS EfiMemoryBottom;




  EFI_PHYSICAL_ADDRESS EfiFreeMemoryTop;



  EFI_PHYSICAL_ADDRESS EfiFreeMemoryBottom;



  EFI_PHYSICAL_ADDRESS EfiEndOfHobList;
} EFI_HOB_HANDOFF_INFO_TABLE;






typedef struct {







  EFI_GUID Name;






  EFI_PHYSICAL_ADDRESS MemoryBaseAddress;




  UINT64 MemoryLength;






  EFI_MEMORY_TYPE MemoryType;




  UINT8 Reserved[4];
} EFI_HOB_MEMORY_ALLOCATION_HEADER;






typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;




} EFI_HOB_MEMORY_ALLOCATION;






typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;
} EFI_HOB_MEMORY_ALLOCATION_STACK;







typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;
} EFI_HOB_MEMORY_ALLOCATION_BSP_STORE;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_HOB_MEMORY_ALLOCATION_HEADER MemoryAllocationHeader;




  EFI_GUID ModuleName;




  EFI_PHYSICAL_ADDRESS EntryPoint;
} EFI_HOB_MEMORY_ALLOCATION_MODULE;




typedef UINT32 EFI_RESOURCE_TYPE;
# 241 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiHob.h"
typedef UINT32 EFI_RESOURCE_ATTRIBUTE_TYPE;
# 307 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  EFI_HOB_GENERIC_HEADER Header;




  EFI_GUID Owner;



  EFI_RESOURCE_TYPE ResourceType;



  EFI_RESOURCE_ATTRIBUTE_TYPE ResourceAttribute;



  EFI_PHYSICAL_ADDRESS PhysicalStart;



  UINT64 ResourceLength;
} EFI_HOB_RESOURCE_DESCRIPTOR;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_GUID Name;



} EFI_HOB_GUID_TYPE;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_PHYSICAL_ADDRESS BaseAddress;



  UINT64 Length;
} EFI_HOB_FIRMWARE_VOLUME;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_PHYSICAL_ADDRESS BaseAddress;



  UINT64 Length;



  EFI_GUID FvName;



  EFI_GUID FileName;
} EFI_HOB_FIRMWARE_VOLUME2;





typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  EFI_PHYSICAL_ADDRESS BaseAddress;



  UINT64 Length;



  UINT32 AuthenticationStatus;




  BOOLEAN ExtractedFv;




  EFI_GUID FvName;




  EFI_GUID FileName;
} EFI_HOB_FIRMWARE_VOLUME3;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;



  UINT8 SizeOfMemorySpace;



  UINT8 SizeOfIoSpace;



  UINT8 Reserved[6];
} EFI_HOB_CPU;




typedef struct {



  EFI_HOB_GENERIC_HEADER Header;
} EFI_HOB_MEMORY_POOL;
# 475 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiHob.h"
typedef struct {



  EFI_HOB_GENERIC_HEADER Header;






  EFI_PHYSICAL_ADDRESS BaseAddress;
  UINT64 Length;
} EFI_HOB_UEFI_CAPSULE;




typedef union {
  EFI_HOB_GENERIC_HEADER *Header;
  EFI_HOB_HANDOFF_INFO_TABLE *HandoffInformationTable;
  EFI_HOB_MEMORY_ALLOCATION *MemoryAllocation;
  EFI_HOB_MEMORY_ALLOCATION_BSP_STORE *MemoryAllocationBspStore;
  EFI_HOB_MEMORY_ALLOCATION_STACK *MemoryAllocationStack;
  EFI_HOB_MEMORY_ALLOCATION_MODULE *MemoryAllocationModule;
  EFI_HOB_RESOURCE_DESCRIPTOR *ResourceDescriptor;
  EFI_HOB_GUID_TYPE *Guid;
  EFI_HOB_FIRMWARE_VOLUME *FirmwareVolume;
  EFI_HOB_FIRMWARE_VOLUME2 *FirmwareVolume2;
  EFI_HOB_FIRMWARE_VOLUME3 *FirmwareVolume3;
  EFI_HOB_CPU *Cpu;
  EFI_HOB_MEMORY_POOL *Pool;
  EFI_HOB_UEFI_CAPSULE *Capsule;
  UINT8 *Raw;
} EFI_PEI_HOB_POINTERS;
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiDependency.h" 1
# 20 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiStatusCode.h" 1
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiStatusCode.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h" 1
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h" 1
# 57 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT16 e_magic;
  UINT16 e_cblp;
  UINT16 e_cp;
  UINT16 e_crlc;
  UINT16 e_cparhdr;
  UINT16 e_minalloc;
  UINT16 e_maxalloc;
  UINT16 e_ss;
  UINT16 e_sp;
  UINT16 e_csum;
  UINT16 e_ip;
  UINT16 e_cs;
  UINT16 e_lfarlc;
  UINT16 e_ovno;
  UINT16 e_res[4];
  UINT16 e_oemid;
  UINT16 e_oeminfo;
  UINT16 e_res2[10];
  UINT32 e_lfanew;
} EFI_IMAGE_DOS_HEADER;




typedef struct {
  UINT16 Machine;
  UINT16 NumberOfSections;
  UINT32 TimeDateStamp;
  UINT32 PointerToSymbolTable;
  UINT32 NumberOfSymbols;
  UINT16 SizeOfOptionalHeader;
  UINT16 Characteristics;
} EFI_IMAGE_FILE_HEADER;
# 115 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 VirtualAddress;
  UINT32 Size;
} EFI_IMAGE_DATA_DIRECTORY;
# 148 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {



  UINT16 Magic;
  UINT8 MajorLinkerVersion;
  UINT8 MinorLinkerVersion;
  UINT32 SizeOfCode;
  UINT32 SizeOfInitializedData;
  UINT32 SizeOfUninitializedData;
  UINT32 AddressOfEntryPoint;
  UINT32 BaseOfCode;
  UINT32 BaseOfData;



  UINT32 ImageBase;
  UINT32 SectionAlignment;
  UINT32 FileAlignment;
  UINT16 MajorOperatingSystemVersion;
  UINT16 MinorOperatingSystemVersion;
  UINT16 MajorImageVersion;
  UINT16 MinorImageVersion;
  UINT16 MajorSubsystemVersion;
  UINT16 MinorSubsystemVersion;
  UINT32 Win32VersionValue;
  UINT32 SizeOfImage;
  UINT32 SizeOfHeaders;
  UINT32 CheckSum;
  UINT16 Subsystem;
  UINT16 DllCharacteristics;
  UINT32 SizeOfStackReserve;
  UINT32 SizeOfStackCommit;
  UINT32 SizeOfHeapReserve;
  UINT32 SizeOfHeapCommit;
  UINT32 LoaderFlags;
  UINT32 NumberOfRvaAndSizes;
  EFI_IMAGE_DATA_DIRECTORY DataDirectory[16];
} EFI_IMAGE_OPTIONAL_HEADER32;
# 199 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {



  UINT16 Magic;
  UINT8 MajorLinkerVersion;
  UINT8 MinorLinkerVersion;
  UINT32 SizeOfCode;
  UINT32 SizeOfInitializedData;
  UINT32 SizeOfUninitializedData;
  UINT32 AddressOfEntryPoint;
  UINT32 BaseOfCode;



  UINT64 ImageBase;
  UINT32 SectionAlignment;
  UINT32 FileAlignment;
  UINT16 MajorOperatingSystemVersion;
  UINT16 MinorOperatingSystemVersion;
  UINT16 MajorImageVersion;
  UINT16 MinorImageVersion;
  UINT16 MajorSubsystemVersion;
  UINT16 MinorSubsystemVersion;
  UINT32 Win32VersionValue;
  UINT32 SizeOfImage;
  UINT32 SizeOfHeaders;
  UINT32 CheckSum;
  UINT16 Subsystem;
  UINT16 DllCharacteristics;
  UINT64 SizeOfStackReserve;
  UINT64 SizeOfStackCommit;
  UINT64 SizeOfHeapReserve;
  UINT64 SizeOfHeapCommit;
  UINT32 LoaderFlags;
  UINT32 NumberOfRvaAndSizes;
  EFI_IMAGE_DATA_DIRECTORY DataDirectory[16];
} EFI_IMAGE_OPTIONAL_HEADER64;





typedef struct {
  UINT32 Signature;
  EFI_IMAGE_FILE_HEADER FileHeader;
  EFI_IMAGE_OPTIONAL_HEADER32 OptionalHeader;
} EFI_IMAGE_NT_HEADERS32;







typedef struct {
  UINT32 Signature;
  EFI_IMAGE_FILE_HEADER FileHeader;
  EFI_IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} EFI_IMAGE_NT_HEADERS64;
# 295 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT8 Name[8];
  union {
    UINT32 PhysicalAddress;
    UINT32 VirtualSize;
  } Misc;
  UINT32 VirtualAddress;
  UINT32 SizeOfRawData;
  UINT32 PointerToRawData;
  UINT32 PointerToRelocations;
  UINT32 PointerToLinenumbers;
  UINT16 NumberOfRelocations;
  UINT16 NumberOfLinenumbers;
  UINT32 Characteristics;
} EFI_IMAGE_SECTION_HEADER;
# 445 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 VirtualAddress;
  UINT32 SymbolTableIndex;
  UINT16 Type;
} EFI_IMAGE_RELOCATION;
# 493 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 VirtualAddress;
  UINT32 SizeOfBlock;
} EFI_IMAGE_BASE_RELOCATION;
# 534 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  union {
    UINT32 SymbolTableIndex;
    UINT32 VirtualAddress;
  } Type;
  UINT16 Linenumber;
} EFI_IMAGE_LINENUMBER;
# 560 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT8 Name[16];
  UINT8 Date[12];
  UINT8 UserID[6];
  UINT8 GroupID[6];
  UINT8 Mode[8];
  UINT8 Size[10];
  UINT8 EndHeader[2];
} EFI_IMAGE_ARCHIVE_MEMBER_HEADER;
# 582 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT16 MajorVersion;
  UINT16 MinorVersion;
  UINT32 Name;
  UINT32 Base;
  UINT32 NumberOfFunctions;
  UINT32 NumberOfNames;
  UINT32 AddressOfFunctions;
  UINT32 AddressOfNames;
  UINT32 AddressOfNameOrdinals;
} EFI_IMAGE_EXPORT_DIRECTORY;
# 606 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT16 Hint;
  UINT8 Name[1];
} EFI_IMAGE_IMPORT_BY_NAME;




typedef struct {
  union {
    UINT32 Function;
    UINT32 Ordinal;
    EFI_IMAGE_IMPORT_BY_NAME *AddressOfData;
  } u1;
} EFI_IMAGE_THUNK_DATA;
# 629 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT32 ForwarderChain;
  UINT32 Name;
  EFI_IMAGE_THUNK_DATA *FirstThunk;
} EFI_IMAGE_IMPORT_DESCRIPTOR;




typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT16 MajorVersion;
  UINT16 MinorVersion;
  UINT32 Type;
  UINT32 SizeOfData;
  UINT32 RVA;
  UINT32 FileOffset;
} EFI_IMAGE_DEBUG_DIRECTORY_ENTRY;
# 658 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef struct {
  UINT32 Signature;
  UINT32 Unknown;
  UINT32 Unknown2;
  UINT32 Unknown3;



} EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY;





typedef struct {
  UINT32 Signature;
  UINT32 Unknown;
  UINT32 Unknown2;
  UINT32 Unknown3;
  UINT32 Unknown4;
  UINT32 Unknown5;



} EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY;





typedef struct {
  UINT32 Signature;
  GUID MachOUuid;



} EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY;




typedef struct {
  UINT32 FunctionStartAddress;
  UINT32 FunctionEndAddress;
  UINT32 UnwindInfoAddress;
} RUNTIME_FUNCTION;

typedef struct {
  UINT8 Version : 3;
  UINT8 Flags : 5;
  UINT8 SizeOfProlog;
  UINT8 CountOfUnwindCodes;
  UINT8 FrameRegister : 4;
  UINT8 FrameRegisterOffset : 4;
} UNWIND_INFO;







typedef struct {
  UINT32 DllCharacteristicsEx;
} EFI_IMAGE_DEBUG_EX_DLLCHARACTERISTICS_ENTRY;




typedef struct {
  UINT32 Characteristics;
  UINT32 TimeDateStamp;
  UINT16 MajorVersion;
  UINT16 MinorVersion;
  UINT16 NumberOfNamedEntries;
  UINT16 NumberOfIdEntries;



} EFI_IMAGE_RESOURCE_DIRECTORY;




typedef struct {
  union {
    struct {
      UINT32 NameOffset : 31;
      UINT32 NameIsString : 1;
    } s;
    UINT32 Id;
  } u1;
  union {
    UINT32 OffsetToData;
    struct {
      UINT32 OffsetToDirectory : 31;
      UINT32 DataIsDirectory : 1;
    } s;
  } u2;
} EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY;




typedef struct {
  UINT16 Length;
  CHAR16 String[1];
} EFI_IMAGE_RESOURCE_DIRECTORY_STRING;




typedef struct {
  UINT32 OffsetToData;
  UINT32 Size;
  UINT32 CodePage;
  UINT32 Reserved;
} EFI_IMAGE_RESOURCE_DATA_ENTRY;




typedef struct {
  UINT16 Signature;
  UINT16 Machine;
  UINT8 NumberOfSections;
  UINT8 Subsystem;
  UINT16 StrippedSize;
  UINT32 AddressOfEntryPoint;
  UINT32 BaseOfCode;
  UINT64 ImageBase;
  EFI_IMAGE_DATA_DIRECTORY DataDirectory[2];
} EFI_TE_IMAGE_HEADER;
# 803 "/home/enyephy/edk2/edk2/MdePkg/Include/IndustryStandard/PeImage.h"
typedef union {
  EFI_IMAGE_NT_HEADERS32 Pe32;
  EFI_IMAGE_NT_HEADERS64 Pe32Plus;
  EFI_TE_IMAGE_HEADER Te;
} EFI_IMAGE_OPTIONAL_HEADER_UNION;

typedef union {
  EFI_IMAGE_NT_HEADERS32 *Pe32;
  EFI_IMAGE_NT_HEADERS64 *Pe32Plus;
  EFI_TE_IMAGE_HEADER *Te;
  EFI_IMAGE_OPTIONAL_HEADER_UNION *Union;
} EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION;
# 20 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h" 2

typedef struct _EFI_DEBUG_SUPPORT_PROTOCOL EFI_DEBUG_SUPPORT_PROTOCOL;
# 35 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef INTN EFI_EXCEPTION_TYPE;
# 62 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT16 Fcw;
  UINT16 Fsw;
  UINT16 Ftw;
  UINT16 Opcode;
  UINT32 Eip;
  UINT16 Cs;
  UINT16 Reserved1;
  UINT32 DataOffset;
  UINT16 Ds;
  UINT8 Reserved2[10];
  UINT8 St0Mm0[10], Reserved3[6];
  UINT8 St1Mm1[10], Reserved4[6];
  UINT8 St2Mm2[10], Reserved5[6];
  UINT8 St3Mm3[10], Reserved6[6];
  UINT8 St4Mm4[10], Reserved7[6];
  UINT8 St5Mm5[10], Reserved8[6];
  UINT8 St6Mm6[10], Reserved9[6];
  UINT8 St7Mm7[10], Reserved10[6];
  UINT8 Xmm0[16];
  UINT8 Xmm1[16];
  UINT8 Xmm2[16];
  UINT8 Xmm3[16];
  UINT8 Xmm4[16];
  UINT8 Xmm5[16];
  UINT8 Xmm6[16];
  UINT8 Xmm7[16];
  UINT8 Reserved11[14 * 16];
} EFI_FX_SAVE_STATE_IA32;




typedef struct {
  UINT32 ExceptionData;
  EFI_FX_SAVE_STATE_IA32 FxSaveState;
  UINT32 Dr0;
  UINT32 Dr1;
  UINT32 Dr2;
  UINT32 Dr3;
  UINT32 Dr6;
  UINT32 Dr7;
  UINT32 Cr0;
  UINT32 Cr1;
  UINT32 Cr2;
  UINT32 Cr3;
  UINT32 Cr4;
  UINT32 Eflags;
  UINT32 Ldtr;
  UINT32 Tr;
  UINT32 Gdtr[2];
  UINT32 Idtr[2];
  UINT32 Eip;
  UINT32 Gs;
  UINT32 Fs;
  UINT32 Es;
  UINT32 Ds;
  UINT32 Cs;
  UINT32 Ss;
  UINT32 Edi;
  UINT32 Esi;
  UINT32 Ebp;
  UINT32 Esp;
  UINT32 Ebx;
  UINT32 Edx;
  UINT32 Ecx;
  UINT32 Eax;
} EFI_SYSTEM_CONTEXT_IA32;
# 156 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT16 Fcw;
  UINT16 Fsw;
  UINT16 Ftw;
  UINT16 Opcode;
  UINT64 Rip;
  UINT64 DataOffset;
  UINT8 Reserved1[8];
  UINT8 St0Mm0[10], Reserved2[6];
  UINT8 St1Mm1[10], Reserved3[6];
  UINT8 St2Mm2[10], Reserved4[6];
  UINT8 St3Mm3[10], Reserved5[6];
  UINT8 St4Mm4[10], Reserved6[6];
  UINT8 St5Mm5[10], Reserved7[6];
  UINT8 St6Mm6[10], Reserved8[6];
  UINT8 St7Mm7[10], Reserved9[6];
  UINT8 Xmm0[16];
  UINT8 Xmm1[16];
  UINT8 Xmm2[16];
  UINT8 Xmm3[16];
  UINT8 Xmm4[16];
  UINT8 Xmm5[16];
  UINT8 Xmm6[16];
  UINT8 Xmm7[16];



  UINT8 Reserved11[14 * 16];
} EFI_FX_SAVE_STATE_X64;




typedef struct {
  UINT64 ExceptionData;
  EFI_FX_SAVE_STATE_X64 FxSaveState;
  UINT64 Dr0;
  UINT64 Dr1;
  UINT64 Dr2;
  UINT64 Dr3;
  UINT64 Dr6;
  UINT64 Dr7;
  UINT64 Cr0;
  UINT64 Cr1;
  UINT64 Cr2;
  UINT64 Cr3;
  UINT64 Cr4;
  UINT64 Cr8;
  UINT64 Rflags;
  UINT64 Ldtr;
  UINT64 Tr;
  UINT64 Gdtr[2];
  UINT64 Idtr[2];
  UINT64 Rip;
  UINT64 Gs;
  UINT64 Fs;
  UINT64 Es;
  UINT64 Ds;
  UINT64 Cs;
  UINT64 Ss;
  UINT64 Rdi;
  UINT64 Rsi;
  UINT64 Rbp;
  UINT64 Rsp;
  UINT64 Rbx;
  UINT64 Rdx;
  UINT64 Rcx;
  UINT64 Rax;
  UINT64 R8;
  UINT64 R9;
  UINT64 R10;
  UINT64 R11;
  UINT64 R12;
  UINT64 R13;
  UINT64 R14;
  UINT64 R15;
} EFI_SYSTEM_CONTEXT_X64;
# 282 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {




  UINT64 Reserved;
  UINT64 R1;
  UINT64 R2;
  UINT64 R3;
  UINT64 R4;
  UINT64 R5;
  UINT64 R6;
  UINT64 R7;
  UINT64 R8;
  UINT64 R9;
  UINT64 R10;
  UINT64 R11;
  UINT64 R12;
  UINT64 R13;
  UINT64 R14;
  UINT64 R15;
  UINT64 R16;
  UINT64 R17;
  UINT64 R18;
  UINT64 R19;
  UINT64 R20;
  UINT64 R21;
  UINT64 R22;
  UINT64 R23;
  UINT64 R24;
  UINT64 R25;
  UINT64 R26;
  UINT64 R27;
  UINT64 R28;
  UINT64 R29;
  UINT64 R30;
  UINT64 R31;

  UINT64 F2[2];
  UINT64 F3[2];
  UINT64 F4[2];
  UINT64 F5[2];
  UINT64 F6[2];
  UINT64 F7[2];
  UINT64 F8[2];
  UINT64 F9[2];
  UINT64 F10[2];
  UINT64 F11[2];
  UINT64 F12[2];
  UINT64 F13[2];
  UINT64 F14[2];
  UINT64 F15[2];
  UINT64 F16[2];
  UINT64 F17[2];
  UINT64 F18[2];
  UINT64 F19[2];
  UINT64 F20[2];
  UINT64 F21[2];
  UINT64 F22[2];
  UINT64 F23[2];
  UINT64 F24[2];
  UINT64 F25[2];
  UINT64 F26[2];
  UINT64 F27[2];
  UINT64 F28[2];
  UINT64 F29[2];
  UINT64 F30[2];
  UINT64 F31[2];

  UINT64 Pr;

  UINT64 B0;
  UINT64 B1;
  UINT64 B2;
  UINT64 B3;
  UINT64 B4;
  UINT64 B5;
  UINT64 B6;
  UINT64 B7;




  UINT64 ArRsc;
  UINT64 ArBsp;
  UINT64 ArBspstore;
  UINT64 ArRnat;

  UINT64 ArFcr;

  UINT64 ArEflag;
  UINT64 ArCsd;
  UINT64 ArSsd;
  UINT64 ArCflg;
  UINT64 ArFsr;
  UINT64 ArFir;
  UINT64 ArFdr;

  UINT64 ArCcv;

  UINT64 ArUnat;

  UINT64 ArFpsr;

  UINT64 ArPfs;
  UINT64 ArLc;
  UINT64 ArEc;




  UINT64 CrDcr;
  UINT64 CrItm;
  UINT64 CrIva;
  UINT64 CrPta;
  UINT64 CrIpsr;
  UINT64 CrIsr;
  UINT64 CrIip;
  UINT64 CrIfa;
  UINT64 CrItir;
  UINT64 CrIipa;
  UINT64 CrIfs;
  UINT64 CrIim;
  UINT64 CrIha;




  UINT64 Dbr0;
  UINT64 Dbr1;
  UINT64 Dbr2;
  UINT64 Dbr3;
  UINT64 Dbr4;
  UINT64 Dbr5;
  UINT64 Dbr6;
  UINT64 Dbr7;

  UINT64 Ibr0;
  UINT64 Ibr1;
  UINT64 Ibr2;
  UINT64 Ibr3;
  UINT64 Ibr4;
  UINT64 Ibr5;
  UINT64 Ibr6;
  UINT64 Ibr7;




  UINT64 IntNat;
} EFI_SYSTEM_CONTEXT_IPF;
# 456 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT64 R0;
  UINT64 R1;
  UINT64 R2;
  UINT64 R3;
  UINT64 R4;
  UINT64 R5;
  UINT64 R6;
  UINT64 R7;
  UINT64 Flags;
  UINT64 ControlFlags;
  UINT64 Ip;
} EFI_SYSTEM_CONTEXT_EBC;
# 490 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT32 R0;
  UINT32 R1;
  UINT32 R2;
  UINT32 R3;
  UINT32 R4;
  UINT32 R5;
  UINT32 R6;
  UINT32 R7;
  UINT32 R8;
  UINT32 R9;
  UINT32 R10;
  UINT32 R11;
  UINT32 R12;
  UINT32 SP;
  UINT32 LR;
  UINT32 PC;
  UINT32 CPSR;
  UINT32 DFSR;
  UINT32 DFAR;
  UINT32 IFSR;
  UINT32 IFAR;
} EFI_SYSTEM_CONTEXT_ARM;
# 527 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {

  UINT64 X0;
  UINT64 X1;
  UINT64 X2;
  UINT64 X3;
  UINT64 X4;
  UINT64 X5;
  UINT64 X6;
  UINT64 X7;
  UINT64 X8;
  UINT64 X9;
  UINT64 X10;
  UINT64 X11;
  UINT64 X12;
  UINT64 X13;
  UINT64 X14;
  UINT64 X15;
  UINT64 X16;
  UINT64 X17;
  UINT64 X18;
  UINT64 X19;
  UINT64 X20;
  UINT64 X21;
  UINT64 X22;
  UINT64 X23;
  UINT64 X24;
  UINT64 X25;
  UINT64 X26;
  UINT64 X27;
  UINT64 X28;
  UINT64 FP;
  UINT64 LR;
  UINT64 SP;


  UINT64 V0[2];
  UINT64 V1[2];
  UINT64 V2[2];
  UINT64 V3[2];
  UINT64 V4[2];
  UINT64 V5[2];
  UINT64 V6[2];
  UINT64 V7[2];
  UINT64 V8[2];
  UINT64 V9[2];
  UINT64 V10[2];
  UINT64 V11[2];
  UINT64 V12[2];
  UINT64 V13[2];
  UINT64 V14[2];
  UINT64 V15[2];
  UINT64 V16[2];
  UINT64 V17[2];
  UINT64 V18[2];
  UINT64 V19[2];
  UINT64 V20[2];
  UINT64 V21[2];
  UINT64 V22[2];
  UINT64 V23[2];
  UINT64 V24[2];
  UINT64 V25[2];
  UINT64 V26[2];
  UINT64 V27[2];
  UINT64 V28[2];
  UINT64 V29[2];
  UINT64 V30[2];
  UINT64 V31[2];

  UINT64 ELR;
  UINT64 SPSR;
  UINT64 FPSR;
  UINT64 ESR;
  UINT64 FAR;
} EFI_SYSTEM_CONTEXT_AARCH64;
# 645 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT64 X0;
  UINT64 X1;
  UINT64 X2;
  UINT64 X3;
  UINT64 X4;
  UINT64 X5;
  UINT64 X6;
  UINT64 X7;
  UINT64 X8;
  UINT64 X9;
  UINT64 X10;
  UINT64 X11;
  UINT64 X12;
  UINT64 X13;
  UINT64 X14;
  UINT64 X15;
  UINT64 X16;
  UINT64 X17;
  UINT64 X18;
  UINT64 X19;
  UINT64 X20;
  UINT64 X21;
  UINT64 X22;
  UINT64 X23;
  UINT64 X24;
  UINT64 X25;
  UINT64 X26;
  UINT64 X27;
  UINT64 X28;
  UINT64 X29;
  UINT64 X30;
  UINT64 X31;
  UINT64 SEPC;
  UINT32 SSTATUS;
  UINT32 STVAL;
} EFI_SYSTEM_CONTEXT_RISCV64;
# 744 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef struct {
  UINT64 R0;
  UINT64 R1;
  UINT64 R2;
  UINT64 R3;
  UINT64 R4;
  UINT64 R5;
  UINT64 R6;
  UINT64 R7;
  UINT64 R8;
  UINT64 R9;
  UINT64 R10;
  UINT64 R11;
  UINT64 R12;
  UINT64 R13;
  UINT64 R14;
  UINT64 R15;
  UINT64 R16;
  UINT64 R17;
  UINT64 R18;
  UINT64 R19;
  UINT64 R20;
  UINT64 R21;
  UINT64 R22;
  UINT64 R23;
  UINT64 R24;
  UINT64 R25;
  UINT64 R26;
  UINT64 R27;
  UINT64 R28;
  UINT64 R29;
  UINT64 R30;
  UINT64 R31;

  UINT64 CRMD;
  UINT64 PRMD;
  UINT64 EUEN;
  UINT64 MISC;
  UINT64 ECFG;
  UINT64 ESTAT;
  UINT64 ERA;
  UINT64 BADV;
  UINT64 BADI;
} EFI_SYSTEM_CONTEXT_LOONGARCH64;




typedef union {
  EFI_SYSTEM_CONTEXT_EBC *SystemContextEbc;
  EFI_SYSTEM_CONTEXT_IA32 *SystemContextIa32;
  EFI_SYSTEM_CONTEXT_X64 *SystemContextX64;
  EFI_SYSTEM_CONTEXT_IPF *SystemContextIpf;
  EFI_SYSTEM_CONTEXT_ARM *SystemContextArm;
  EFI_SYSTEM_CONTEXT_AARCH64 *SystemContextAArch64;
  EFI_SYSTEM_CONTEXT_RISCV64 *SystemContextRiscV64;
  EFI_SYSTEM_CONTEXT_LOONGARCH64 *SystemContextLoongArch64;
} EFI_SYSTEM_CONTEXT;
# 814 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
void
(__attribute__((cdecl)) *EFI_EXCEPTION_CALLBACK)(
  EFI_EXCEPTION_TYPE ExceptionType,
  EFI_SYSTEM_CONTEXT SystemContext
  );







typedef
void
(__attribute__((cdecl)) *EFI_PERIODIC_CALLBACK)(
  EFI_SYSTEM_CONTEXT SystemContext
  );




typedef enum {
  IsaIa32 = 0x014c,
  IsaX64 = 0x8664,
  IsaIpf = 0x0200,
  IsaEbc = 0x0EBC,
  IsaArm = 0x01c2,
  IsaAArch64 = 0xAA64
} EFI_INSTRUCTION_SET_ARCHITECTURE;
# 860 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_GET_MAXIMUM_PROCESSOR_INDEX)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN *MaxProcessorIndex
  );
# 882 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_REGISTER_PERIODIC_CALLBACK)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN ProcessorIndex,
  EFI_PERIODIC_CALLBACK PeriodicCallback
  );
# 906 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_REGISTER_EXCEPTION_CALLBACK)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN ProcessorIndex,
  EFI_EXCEPTION_CALLBACK ExceptionCallback,
  EFI_EXCEPTION_TYPE ExceptionType
  );
# 928 "/home/enyephy/edk2/edk2/MdePkg/Include/Protocol/DebugSupport.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_INVALIDATE_INSTRUCTION_CACHE)(
  EFI_DEBUG_SUPPORT_PROTOCOL *This,
  UINTN ProcessorIndex,
  void *Start,
  UINT64 Length
  );






struct _EFI_DEBUG_SUPPORT_PROTOCOL {



  EFI_INSTRUCTION_SET_ARCHITECTURE Isa;
  EFI_GET_MAXIMUM_PROCESSOR_INDEX GetMaximumProcessorIndex;
  EFI_REGISTER_PERIODIC_CALLBACK RegisterPeriodicCallback;
  EFI_REGISTER_EXCEPTION_CALLBACK RegisterExceptionCallback;
  EFI_INVALIDATE_INSTRUCTION_CACHE InvalidateInstructionCache;
};

extern EFI_GUID gEfiDebugSupportProtocolGuid;
# 20 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiStatusCode.h" 2




typedef UINT32 EFI_STATUS_CODE_TYPE;
# 67 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiStatusCode.h"
typedef UINT32 EFI_STATUS_CODE_VALUE;
# 84 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiStatusCode.h"
typedef struct {



  UINT16 HeaderSize;



  UINT16 Size;



  EFI_GUID Type;
} EFI_STATUS_CODE_DATA;
# 21 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiS3BootScript.h" 1
# 37 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiS3BootScript.h"
typedef enum {
  EfiBootScriptWidthUint8,
  EfiBootScriptWidthUint16,
  EfiBootScriptWidthUint32,
  EfiBootScriptWidthUint64,
  EfiBootScriptWidthFifoUint8,
  EfiBootScriptWidthFifoUint16,
  EfiBootScriptWidthFifoUint32,
  EfiBootScriptWidthFifoUint64,
  EfiBootScriptWidthFillUint8,
  EfiBootScriptWidthFillUint16,
  EfiBootScriptWidthFillUint32,
  EfiBootScriptWidthFillUint64,
  EfiBootScriptWidthMaximum
} EFI_BOOT_SCRIPT_WIDTH;
# 22 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h" 2
# 109 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
typedef struct {





  EFI_PHYSICAL_ADDRESS PhysicalStart;




  EFI_PHYSICAL_ADDRESS CpuStart;



  UINT64 PhysicalSize;






  UINT64 RegionState;
} EFI_MMRAM_DESCRIPTOR;

typedef EFI_MMRAM_DESCRIPTOR EFI_SMRAM_DESCRIPTOR;




typedef struct _EFI_MM_RESERVED_MMRAM_REGION {




  EFI_PHYSICAL_ADDRESS MmramReservedStart;




  UINT64 MmramReservedSize;
} EFI_MM_RESERVED_MMRAM_REGION;

typedef enum {
  EFI_PCD_TYPE_8,
  EFI_PCD_TYPE_16,
  EFI_PCD_TYPE_32,
  EFI_PCD_TYPE_64,
  EFI_PCD_TYPE_BOOL,
  EFI_PCD_TYPE_PTR
} EFI_PCD_TYPE;

typedef struct {




  EFI_PCD_TYPE PcdType;




  UINTN PcdSize;






  CHAR8 *PcdName;
} EFI_PCD_INFO;
# 189 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
typedef
void
(__attribute__((cdecl)) *EFI_AP_PROCEDURE)(
  void *Buffer
  );
# 205 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiMultiPhase.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_AP_PROCEDURE2)(
  void *ProcedureArgument
  );
# 17 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2




typedef void *EFI_PEI_FV_HANDLE;




typedef void *EFI_PEI_FILE_HANDLE;




typedef struct _EFI_PEI_SERVICES EFI_PEI_SERVICES;




typedef struct _EFI_PEI_NOTIFY_DESCRIPTOR EFI_PEI_NOTIFY_DESCRIPTOR;

# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h" 1
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef struct _EFI_PEI_CPU_IO_PPI EFI_PEI_CPU_IO_PPI;




typedef enum {
  EfiPeiCpuIoWidthUint8,
  EfiPeiCpuIoWidthUint16,
  EfiPeiCpuIoWidthUint32,
  EfiPeiCpuIoWidthUint64,
  EfiPeiCpuIoWidthFifoUint8,
  EfiPeiCpuIoWidthFifoUint16,
  EfiPeiCpuIoWidthFifoUint32,
  EfiPeiCpuIoWidthFifoUint64,
  EfiPeiCpuIoWidthFillUint8,
  EfiPeiCpuIoWidthFillUint16,
  EfiPeiCpuIoWidthFillUint32,
  EfiPeiCpuIoWidthFillUint64,
  EfiPeiCpuIoWidthMaximum
} EFI_PEI_CPU_IO_PPI_WIDTH;
# 55 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_MEM)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  EFI_PEI_CPU_IO_PPI_WIDTH Width,
  UINT64 Address,
  UINTN Count,
  void *Buffer
  );




typedef struct {



  EFI_PEI_CPU_IO_PPI_IO_MEM Read;



  EFI_PEI_CPU_IO_PPI_IO_MEM Write;
} EFI_PEI_CPU_IO_PPI_ACCESS;
# 91 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT8
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 110 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT16
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 129 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT32
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 148 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT64
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_READ64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 166 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT8 Data
  );
# 185 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT16 Data
  );
# 204 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT32 Data
  );
# 223 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_IO_WRITE64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT64 Data
  );
# 243 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT8
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 262 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT16
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 281 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT32
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 300 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
UINT64
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_READ64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address
  );
# 318 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE8)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT8 Data
  );
# 337 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE16)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT16 Data
  );
# 356 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE32)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT32 Data
  );
# 375 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/CpuIo.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CPU_IO_PPI_MEM_WRITE64)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_CPU_IO_PPI *This,
  UINT64 Address,
  UINT64 Data
  );






struct _EFI_PEI_CPU_IO_PPI {



  EFI_PEI_CPU_IO_PPI_ACCESS Mem;



  EFI_PEI_CPU_IO_PPI_ACCESS Io;

  EFI_PEI_CPU_IO_PPI_IO_READ8 IoRead8;
  EFI_PEI_CPU_IO_PPI_IO_READ16 IoRead16;
  EFI_PEI_CPU_IO_PPI_IO_READ32 IoRead32;
  EFI_PEI_CPU_IO_PPI_IO_READ64 IoRead64;

  EFI_PEI_CPU_IO_PPI_IO_WRITE8 IoWrite8;
  EFI_PEI_CPU_IO_PPI_IO_WRITE16 IoWrite16;
  EFI_PEI_CPU_IO_PPI_IO_WRITE32 IoWrite32;
  EFI_PEI_CPU_IO_PPI_IO_WRITE64 IoWrite64;

  EFI_PEI_CPU_IO_PPI_MEM_READ8 MemRead8;
  EFI_PEI_CPU_IO_PPI_MEM_READ16 MemRead16;
  EFI_PEI_CPU_IO_PPI_MEM_READ32 MemRead32;
  EFI_PEI_CPU_IO_PPI_MEM_READ64 MemRead64;

  EFI_PEI_CPU_IO_PPI_MEM_WRITE8 MemWrite8;
  EFI_PEI_CPU_IO_PPI_MEM_WRITE16 MemWrite16;
  EFI_PEI_CPU_IO_PPI_MEM_WRITE32 MemWrite32;
  EFI_PEI_CPU_IO_PPI_MEM_WRITE64 MemWrite64;
};

extern EFI_GUID gEfiPeiCpuIoPpiInstalledGuid;
# 39 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/PciCfg2.h" 1
# 18 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/PciCfg2.h"
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h" 1
# 26 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef struct {
  UINT32 Ebx;
  UINT32 Esi;
  UINT32 Edi;
  UINT32 Ebp;
  UINT32 Esp;
  UINT32 Eip;
  UINT32 Ssp;
} BASE_LIBRARY_JUMP_BUFFER;
# 620 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrnLenS (
  const CHAR16 *String,
  UINTN MaxSize
  );
# 648 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrnSizeS (
  const CHAR16 *String,
  UINTN MaxSize
  );
# 681 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrCpyS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source
  );
# 718 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrnCpyS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source,
  UINTN Length
  );
# 756 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrCatS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source
  );
# 796 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrnCatS (
  CHAR16 *Destination,
  UINTN DestMax,
  const CHAR16 *Source,
  UINTN Length
  );
# 848 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrDecimalToUintnS (
  const CHAR16 *String,
  CHAR16 **EndPointer ,
  UINTN *Data
  );
# 899 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrDecimalToUint64S (
  const CHAR16 *String,
  CHAR16 **EndPointer ,
  UINT64 *Data
  );
# 955 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrHexToUintnS (
  const CHAR16 *String,
  CHAR16 **EndPointer ,
  UINTN *Data
  );
# 1011 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrHexToUint64S (
  const CHAR16 *String,
  CHAR16 **EndPointer ,
  UINT64 *Data
  );
# 1033 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrnLenS (
  const CHAR8 *String,
  UINTN MaxSize
  );
# 1059 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrnSizeS (
  const CHAR8 *String,
  UINTN MaxSize
  );
# 1089 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrCpyS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source
  );
# 1123 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrnCpyS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source,
  UINTN Length
  );
# 1158 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrCatS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source
  );
# 1195 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrnCatS (
  CHAR8 *Destination,
  UINTN DestMax,
  const CHAR8 *Source,
  UINTN Length
  );
# 1245 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrDecimalToUintnS (
  const CHAR8 *String,
  CHAR8 **EndPointer ,
  UINTN *Data
  );
# 1294 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrDecimalToUint64S (
  const CHAR8 *String,
  CHAR8 **EndPointer ,
  UINT64 *Data
  );
# 1347 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrHexToUintnS (
  const CHAR8 *String,
  CHAR8 **EndPointer ,
  UINTN *Data
  );
# 1400 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrHexToUint64S (
  const CHAR8 *String,
  CHAR8 **EndPointer ,
  UINT64 *Data
  );
# 1425 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrLen (
  const CHAR16 *String
  );
# 1449 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrSize (
  const CHAR16 *String
  );
# 1483 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
StrCmp (
  const CHAR16 *FirstString,
  const CHAR16 *SecondString
  );
# 1522 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
StrnCmp (
  const CHAR16 *FirstString,
  const CHAR16 *SecondString,
  UINTN Length
  );
# 1555 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR16 *
__attribute__((cdecl))
StrStr (
  const CHAR16 *String,
  const CHAR16 *SearchString
  );
# 1596 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrDecimalToUintn (
  const CHAR16 *String
  );
# 1636 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
StrDecimalToUint64 (
  const CHAR16 *String
  );
# 1677 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
StrHexToUintn (
  const CHAR16 *String
  );
# 1718 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
StrHexToUint64 (
  const CHAR16 *String
  );
# 1774 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrToIpv6Address (
  const CHAR16 *String,
  CHAR16 **EndPointer ,
  IPv6_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 1824 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrToIpv4Address (
  const CHAR16 *String,
  CHAR16 **EndPointer ,
  IPv4_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 1877 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrToGuid (
  const CHAR16 *String,
  GUID *Guid
  );
# 1917 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
StrHexToBytes (
  const CHAR16 *String,
  UINTN Length,
  UINT8 *Buffer,
  UINTN MaxBufferSize
  );
# 1966 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
UnicodeStrToAsciiStrS (
  const CHAR16 *Source,
  CHAR8 *Destination,
  UINTN DestMax
  );
# 2017 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
UnicodeStrnToAsciiStrS (
  const CHAR16 *Source,
  UINTN Length,
  CHAR8 *Destination,
  UINTN DestMax,
  UINTN *DestinationLength
  );
# 2044 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrLen (
  const CHAR8 *String
  );
# 2067 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrSize (
  const CHAR8 *String
  );
# 2099 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
AsciiStrCmp (
  const CHAR8 *FirstString,
  const CHAR8 *SecondString
  );
# 2135 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
AsciiStriCmp (
  const CHAR8 *FirstString,
  const CHAR8 *SecondString
  );
# 2172 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
AsciiStrnCmp (
  const CHAR8 *FirstString,
  const CHAR8 *SecondString,
  UINTN Length
  );
# 2204 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR8 *
__attribute__((cdecl))
AsciiStrStr (
  const CHAR8 *String,
  const CHAR8 *SearchString
  );
# 2241 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrDecimalToUintn (
  const CHAR8 *String
  );
# 2277 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsciiStrDecimalToUint64 (
  const CHAR8 *String
  );
# 2317 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsciiStrHexToUintn (
  const CHAR8 *String
  );
# 2357 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsciiStrHexToUint64 (
  const CHAR8 *String
  );
# 2411 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToIpv6Address (
  const CHAR8 *String,
  CHAR8 **EndPointer ,
  IPv6_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 2459 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToIpv4Address (
  const CHAR8 *String,
  CHAR8 **EndPointer ,
  IPv4_ADDRESS *Address,
  UINT8 *PrefixLength
  );
# 2508 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToGuid (
  const CHAR8 *String,
  GUID *Guid
  );
# 2546 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrHexToBytes (
  const CHAR8 *String,
  UINTN Length,
  UINT8 *Buffer,
  UINTN MaxBufferSize
  );
# 2591 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrToUnicodeStrS (
  const CHAR8 *Source,
  CHAR16 *Destination,
  UINTN DestMax
  );
# 2641 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
AsciiStrnToUnicodeStrS (
  const CHAR8 *Source,
  UINTN Length,
  CHAR16 *Destination,
  UINTN DestMax,
  UINTN *DestinationLength
  );
# 2666 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR16
__attribute__((cdecl))
CharToUpper (
  CHAR16 Char
  );
# 2685 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR8
__attribute__((cdecl))
AsciiCharToUpper (
  CHAR8 Chr
  );
# 2710 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
Base64Encode (
  const UINT8 *Source,
  UINTN SourceLength,
  CHAR8 *Destination ,
  UINTN *DestinationSize
  );
# 2801 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
RETURN_STATUS
__attribute__((cdecl))
Base64Decode (
  const CHAR8 *Source ,
  UINTN SourceSize,
  UINT8 *Destination ,
  UINTN *DestinationSize
  );
# 2823 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
DecimalToBcd8 (
  UINT8 Value
  );
# 2843 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BcdToDecimal8 (
  UINT8 Value
  );
# 2861 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
PathRemoveLastItem (
  CHAR16 *Path
  );
# 2880 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
CHAR16 *
__attribute__((cdecl))
PathCleanUpDirectories (
  CHAR16 *Path
  );
# 2952 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsNodeInList (
  const LIST_ENTRY *FirstEntry,
  const LIST_ENTRY *SecondEntry
  );
# 2975 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
InitializeListHead (
  LIST_ENTRY *ListHead
  );
# 3003 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
InsertHeadList (
  LIST_ENTRY *ListHead,
  LIST_ENTRY *Entry
  );
# 3032 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
InsertTailList (
  LIST_ENTRY *ListHead,
  LIST_ENTRY *Entry
  );
# 3059 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
GetFirstNode (
  const LIST_ENTRY *List
  );
# 3086 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
GetNextNode (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 3114 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
GetPreviousNode (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 3140 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsListEmpty (
  const LIST_ENTRY *ListHead
  );
# 3172 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsNull (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 3202 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
IsNodeAtEnd (
  const LIST_ENTRY *List,
  const LIST_ENTRY *Node
  );
# 3235 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
SwapListEntries (
  LIST_ENTRY *FirstEntry,
  LIST_ENTRY *SecondEntry
  );
# 3263 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
LIST_ENTRY *
__attribute__((cdecl))
RemoveEntryList (
  const LIST_ENTRY *Entry
  );
# 3283 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef
INTN
(__attribute__((cdecl)) *BASE_SORT_COMPARE)(
  const void *Buffer1,
  const void *Buffer2
  );
# 3313 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
QuickSort (
  void *BufferToSort,
  const UINTN Count,
  const UINTN ElementSize,
  BASE_SORT_COMPARE CompareFunction,
  void *BufferOneElement
  );
# 3338 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
LShiftU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3360 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
RShiftU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3382 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
ARShiftU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3405 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
LRotU32 (
  UINT32 Operand,
  UINTN Count
  );
# 3428 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
RRotU32 (
  UINT32 Operand,
  UINTN Count
  );
# 3451 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
LRotU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3474 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
RRotU64 (
  UINT64 Operand,
  UINTN Count
  );
# 3494 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
LowBitSet32 (
  UINT32 Operand
  );
# 3514 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
LowBitSet64 (
  UINT64 Operand
  );
# 3534 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
HighBitSet32 (
  UINT32 Operand
  );
# 3554 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INTN
__attribute__((cdecl))
HighBitSet64 (
  UINT64 Operand
  );
# 3573 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
GetPowerOfTwo32 (
  UINT32 Operand
  );
# 3592 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
GetPowerOfTwo64 (
  UINT64 Operand
  );
# 3610 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
SwapBytes16 (
  UINT16 Value
  );
# 3628 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
SwapBytes32 (
  UINT32 Value
  );
# 3646 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
SwapBytes64 (
  UINT64 Value
  );
# 3666 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
MultU64x32 (
  UINT64 Multiplicand,
  UINT32 Multiplier
  );
# 3687 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
MultU64x64 (
  UINT64 Multiplicand,
  UINT64 Multiplier
  );
# 3708 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INT64
__attribute__((cdecl))
MultS64x64 (
  INT64 Multiplicand,
  INT64 Multiplier
  );
# 3731 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
DivU64x32 (
  UINT64 Dividend,
  UINT32 Divisor
  );
# 3754 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
ModU64x32 (
  UINT64 Dividend,
  UINT32 Divisor
  );
# 3780 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
DivU64x32Remainder (
  UINT64 Dividend,
  UINT32 Divisor,
  UINT32 *Remainder
  );
# 3807 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
DivU64x64Remainder (
  UINT64 Dividend,
  UINT64 Divisor,
  UINT64 *Remainder
  );
# 3838 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
INT64
__attribute__((cdecl))
DivS64x64Remainder (
  INT64 Dividend,
  INT64 Divisor,
  INT64 *Remainder
  );
# 3859 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
ReadUnaligned16 (
  const UINT16 *Buffer
  );
# 3880 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
WriteUnaligned16 (
  UINT16 *Buffer,
  UINT16 Value
  );
# 3900 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
ReadUnaligned24 (
  const UINT32 *Buffer
  );
# 3921 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
WriteUnaligned24 (
  UINT32 *Buffer,
  UINT32 Value
  );
# 3941 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
ReadUnaligned32 (
  const UINT32 *Buffer
  );
# 3962 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
WriteUnaligned32 (
  UINT32 *Buffer,
  UINT32 Value
  );
# 3982 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
ReadUnaligned64 (
  const UINT64 *Buffer
  );
# 4003 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
WriteUnaligned64 (
  UINT64 *Buffer,
  UINT64 Value
  );
# 4033 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldRead8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4064 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldWrite8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 Value
  );
# 4097 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldOr8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 OrData
  );
# 4130 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldAnd8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 AndData
  );
# 4166 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldAndThenOr8 (
  UINT8 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT8 AndData,
  UINT8 OrData
  );
# 4195 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldRead16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4226 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldWrite16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 Value
  );
# 4259 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldOr16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 OrData
  );
# 4292 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldAnd16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 AndData
  );
# 4328 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
BitFieldAndThenOr16 (
  UINT16 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT16 AndData,
  UINT16 OrData
  );
# 4357 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldRead32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4388 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldWrite32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 Value
  );
# 4421 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldOr32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 OrData
  );
# 4454 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldAnd32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData
  );
# 4490 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
BitFieldAndThenOr32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData,
  UINT32 OrData
  );
# 4519 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldRead64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4550 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldWrite64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 Value
  );
# 4583 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldOr64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 OrData
  );
# 4616 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldAnd64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData
  );
# 4652 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
BitFieldAndThenOr64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData,
  UINT64 OrData
  );
# 4682 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldCountOnes32 (
  UINT32 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4710 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
BitFieldCountOnes64 (
  UINT64 Operand,
  UINTN StartBit,
  UINTN EndBit
  );
# 4740 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
CalculateSum8 (
  const UINT8 *Buffer,
  UINTN Length
  );
# 4765 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT8
__attribute__((cdecl))
CalculateCheckSum8 (
  const UINT8 *Buffer,
  UINTN Length
  );
# 4791 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
CalculateSum16 (
  const UINT16 *Buffer,
  UINTN Length
  );
# 4818 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
CalculateCheckSum16 (
  const UINT16 *Buffer,
  UINTN Length
  );
# 4844 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateSum32 (
  const UINT32 *Buffer,
  UINTN Length
  );
# 4871 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateCheckSum32 (
  const UINT32 *Buffer,
  UINTN Length
  );
# 4897 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
CalculateSum64 (
  const UINT64 *Buffer,
  UINTN Length
  );
# 4924 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
CalculateCheckSum64 (
  const UINT64 *Buffer,
  UINTN Length
  );
# 4944 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateCrc32 (
  void *Buffer,
  UINTN Length
  );
# 4960 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
CalculateCrc16Ansi (
  const void *Buffer,
  UINTN Length,
  UINT16 InitialValue
  );
# 4982 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
CalculateCrc32c (
  const void *Buffer,
  UINTN Length,
  UINT32 InitialValue
  );
# 4999 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
CalculateCrc16CcittF (
  const void *Buffer,
  UINTN Length,
  UINT16 InitialValue
  );
# 5017 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef
void
(__attribute__((cdecl)) *SWITCH_STACK_ENTRY_POINT)(
  void *Context1 ,
  void *Context2
  );
# 5031 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
MemoryFence (
  void
  );
# 5058 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
__attribute__((returns_twice))
UINTN
__attribute__((cdecl))
SetJump (
  BASE_LIBRARY_JUMP_BUFFER *JumpBuffer
  );
# 5081 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
LongJump (
  BASE_LIBRARY_JUMP_BUFFER *JumpBuffer,
  UINTN Value
  );





void
__attribute__((cdecl))
EnableInterrupts (
  void
  );





void
__attribute__((cdecl))
DisableInterrupts (
  void
  );
# 5116 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
SaveAndDisableInterrupts (
  void
  );






void
__attribute__((cdecl))
EnableDisableInterrupts (
  void
  );
# 5143 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
GetInterruptState (
  void
  );
# 5163 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
SetInterruptState (
  BOOLEAN InterruptState
  );
# 5176 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
CpuPause (
  void
  );
# 5211 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
SwitchStack (
  SWITCH_STACK_ENTRY_POINT EntryPoint,
  void *Context1 ,
  void *Context2 ,
  void *NewStack,
  ...
  );
# 5228 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
CpuBreakpoint (
  void
  );
# 5243 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
CpuDeadLoop (
  void
  );
# 5256 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
SpeculationBarrier (
  void
  );
# 5276 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
TdCall (
  UINT64 Leaf,
  UINT64 Arg1,
  UINT64 Arg2,
  UINT64 Arg3,
  void *Results
  );
# 5301 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
TdVmCall (
  UINT64 Leaf,
  UINT64 Arg1,
  UINT64 Arg2,
  UINT64 Arg3,
  UINT64 Arg4,
  void *Results
  );







BOOLEAN
__attribute__((cdecl))
TdIsEnabled (
  void
  );
# 5415 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef union {
  struct {
    UINT32 CF : 1;
    UINT32 Reserved_0 : 1;
    UINT32 PF : 1;
    UINT32 Reserved_1 : 1;
    UINT32 AF : 1;
    UINT32 Reserved_2 : 1;
    UINT32 ZF : 1;
    UINT32 SF : 1;
    UINT32 TF : 1;
    UINT32 IF : 1;
    UINT32 DF : 1;
    UINT32 OF : 1;
    UINT32 IOPL : 2;
    UINT32 NT : 1;
    UINT32 Reserved_3 : 1;
  } Bits;
  UINT16 Uint16;
} IA32_FLAGS16;






typedef union {
  struct {
    UINT32 CF : 1;
    UINT32 Reserved_0 : 1;
    UINT32 PF : 1;
    UINT32 Reserved_1 : 1;
    UINT32 AF : 1;
    UINT32 Reserved_2 : 1;
    UINT32 ZF : 1;
    UINT32 SF : 1;
    UINT32 TF : 1;
    UINT32 IF : 1;
    UINT32 DF : 1;
    UINT32 OF : 1;
    UINT32 IOPL : 2;
    UINT32 NT : 1;
    UINT32 Reserved_3 : 1;
    UINT32 RF : 1;
    UINT32 VM : 1;
    UINT32 AC : 1;
    UINT32 VIF : 1;
    UINT32 VIP : 1;
    UINT32 ID : 1;
    UINT32 Reserved_4 : 10;
  } Bits;
  UINTN UintN;
} IA32_EFLAGS32;






typedef union {
  struct {
    UINT32 PE : 1;
    UINT32 MP : 1;
    UINT32 EM : 1;
    UINT32 TS : 1;
    UINT32 ET : 1;
    UINT32 NE : 1;
    UINT32 Reserved_0 : 10;
    UINT32 WP : 1;
    UINT32 Reserved_1 : 1;
    UINT32 AM : 1;
    UINT32 Reserved_2 : 10;
    UINT32 NW : 1;
    UINT32 CD : 1;
    UINT32 PG : 1;
  } Bits;
  UINTN UintN;
} IA32_CR0;






typedef union {
  struct {
    UINT32 VME : 1;
    UINT32 PVI : 1;
    UINT32 TSD : 1;
    UINT32 DE : 1;
    UINT32 PSE : 1;
    UINT32 PAE : 1;
    UINT32 MCE : 1;
    UINT32 PGE : 1;
    UINT32 PCE : 1;

    UINT32 OSFXSR : 1;

    UINT32 OSXMMEXCPT : 1;


    UINT32 UMIP : 1;
    UINT32 LA57 : 1;
    UINT32 VMXE : 1;
    UINT32 SMXE : 1;
    UINT32 Reserved_3 : 1;
    UINT32 FSGSBASE : 1;
    UINT32 PCIDE : 1;
    UINT32 OSXSAVE : 1;
    UINT32 Reserved_4 : 1;
    UINT32 SMEP : 1;
    UINT32 SMAP : 1;
    UINT32 PKE : 1;
    UINT32 Reserved_5 : 9;
  } Bits;
  UINTN UintN;
} IA32_CR4;




typedef union {
  struct {
    UINT32 LimitLow : 16;
    UINT32 BaseLow : 16;
    UINT32 BaseMid : 8;
    UINT32 Type : 4;
    UINT32 S : 1;
    UINT32 DPL : 2;
    UINT32 P : 1;
    UINT32 LimitHigh : 4;
    UINT32 AVL : 1;
    UINT32 L : 1;
    UINT32 DB : 1;
    UINT32 G : 1;
    UINT32 BaseHigh : 8;
  } Bits;
  UINT64 Uint64;
} IA32_SEGMENT_DESCRIPTOR;





typedef struct {
  UINT16 Limit;
  UINTN Base;
} IA32_DESCRIPTOR;
# 5578 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef union {
  struct {
    UINT32 OffsetLow : 16;
    UINT32 Selector : 16;
    UINT32 Reserved_0 : 8;
    UINT32 GateType : 8;
    UINT32 OffsetHigh : 16;
  } Bits;
  UINT64 Uint64;
} IA32_IDT_GATE_DESCRIPTOR;





typedef struct {
  UINT16 PreviousTaskLink;
  UINT16 Reserved_2;
  UINT32 ESP0;
  UINT16 SS0;
  UINT16 Reserved_10;
  UINT32 ESP1;
  UINT16 SS1;
  UINT16 Reserved_18;
  UINT32 ESP2;
  UINT16 SS2;
  UINT16 Reserved_26;
  UINT32 CR3;
  UINT32 EIP;
  UINT32 EFLAGS;
  UINT32 EAX;
  UINT32 ECX;
  UINT32 EDX;
  UINT32 EBX;
  UINT32 ESP;
  UINT32 EBP;
  UINT32 ESI;
  UINT32 EDI;
  UINT16 ES;
  UINT16 Reserved_74;
  UINT16 CS;
  UINT16 Reserved_78;
  UINT16 SS;
  UINT16 Reserved_82;
  UINT16 DS;
  UINT16 Reserved_86;
  UINT16 FS;
  UINT16 Reserved_90;
  UINT16 GS;
  UINT16 Reserved_94;
  UINT16 LDTSegmentSelector;
  UINT16 Reserved_98;
  UINT16 T;
  UINT16 IOMapBaseAddress;
} IA32_TASK_STATE_SEGMENT;

typedef union {
  struct {
    UINT32 LimitLow : 16;
    UINT32 BaseLow : 16;
    UINT32 BaseMid : 8;
    UINT32 Type : 4;
    UINT32 Reserved_43 : 1;
    UINT32 DPL : 2;
    UINT32 P : 1;
    UINT32 LimitHigh : 4;
    UINT32 AVL : 1;
    UINT32 Reserved_52 : 2;
    UINT32 G : 1;
    UINT32 BaseHigh : 8;
  } Bits;
  UINT64 Uint64;
} IA32_TSS_DESCRIPTOR;
# 5720 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef struct {
  UINT8 Buffer[512];
} IA32_FX_BUFFER;




typedef struct {
  UINT32 Reserved1;
  UINT32 Reserved2;
  UINT32 Reserved3;
  UINT32 Reserved4;
  UINT8 BL;
  UINT8 BH;
  UINT16 Reserved5;
  UINT8 DL;
  UINT8 DH;
  UINT16 Reserved6;
  UINT8 CL;
  UINT8 CH;
  UINT16 Reserved7;
  UINT8 AL;
  UINT8 AH;
  UINT16 Reserved8;
} IA32_BYTE_REGS;

typedef struct {
  UINT16 DI;
  UINT16 Reserved1;
  UINT16 SI;
  UINT16 Reserved2;
  UINT16 BP;
  UINT16 Reserved3;
  UINT16 SP;
  UINT16 Reserved4;
  UINT16 BX;
  UINT16 Reserved5;
  UINT16 DX;
  UINT16 Reserved6;
  UINT16 CX;
  UINT16 Reserved7;
  UINT16 AX;
  UINT16 Reserved8;
} IA32_WORD_REGS;

typedef struct {
  UINT32 EDI;
  UINT32 ESI;
  UINT32 EBP;
  UINT32 ESP;
  UINT32 EBX;
  UINT32 EDX;
  UINT32 ECX;
  UINT32 EAX;
  UINT16 DS;
  UINT16 ES;
  UINT16 FS;
  UINT16 GS;
  IA32_EFLAGS32 EFLAGS;
  UINT32 Eip;
  UINT16 CS;
  UINT16 SS;
} IA32_DWORD_REGS;

typedef union {
  IA32_DWORD_REGS E;
  IA32_WORD_REGS X;
  IA32_BYTE_REGS H;
} IA32_REGISTER_SET;




typedef struct {
  IA32_REGISTER_SET *RealModeState;
  void *RealModeBuffer;
  UINT32 RealModeBufferSize;
  UINT32 ThunkAttributes;
} THUNK_CONTEXT;
# 5816 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
typedef void (X86_ASSEMBLY_PATCH_LABEL) (
  void
  );
# 5845 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmCpuid (
  UINT32 Index,
  UINT32 *Eax ,
  UINT32 *Ebx ,
  UINT32 *Ecx ,
  UINT32 *Edx
  );
# 5887 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmCpuidEx (
  UINT32 Index,
  UINT32 SubIndex,
  UINT32 *Eax ,
  UINT32 *Ebx ,
  UINT32 *Ecx ,
  UINT32 *Edx
  );
# 5905 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmDisableCache (
  void
  );
# 5918 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmEnableCache (
  void
  );
# 5938 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmReadMsr32 (
  UINT32 Index
  );
# 5961 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmWriteMsr32 (
  UINT32 Index,
  UINT32 Value
  );
# 5987 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrOr32 (
  UINT32 Index,
  UINT32 OrData
  );
# 6013 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrAnd32 (
  UINT32 Index,
  UINT32 AndData
  );
# 6042 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrAndThenOr32 (
  UINT32 Index,
  UINT32 AndData,
  UINT32 OrData
  );
# 6072 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldRead32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit
  );
# 6105 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldWrite32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 Value
  );
# 6141 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldOr32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 OrData
  );
# 6177 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldAnd32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData
  );
# 6217 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmMsrBitFieldAndThenOr32 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT32 AndData,
  UINT32 OrData
  );
# 6241 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMsr64 (
  UINT32 Index
  );
# 6264 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmWriteMsr64 (
  UINT32 Index,
  UINT64 Value
  );
# 6289 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrOr64 (
  UINT32 Index,
  UINT64 OrData
  );
# 6314 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrAnd64 (
  UINT32 Index,
  UINT64 AndData
  );
# 6342 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrAndThenOr64 (
  UINT32 Index,
  UINT64 AndData,
  UINT64 OrData
  );
# 6372 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldRead64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit
  );
# 6404 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldWrite64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 Value
  );
# 6440 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldOr64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 OrData
  );
# 6476 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldAnd64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData
  );
# 6515 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmMsrBitFieldAndThenOr64 (
  UINT32 Index,
  UINTN StartBit,
  UINTN EndBit,
  UINT64 AndData,
  UINT64 OrData
  );
# 6535 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadEflags (
  void
  );
# 6551 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr0 (
  void
  );
# 6567 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr2 (
  void
  );
# 6583 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr3 (
  void
  );
# 6599 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadCr4 (
  void
  );
# 6616 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr0 (
  UINTN Cr0
  );
# 6633 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr2 (
  UINTN Cr2
  );
# 6650 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr3 (
  UINTN Cr3
  );
# 6667 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteCr4 (
  UINTN Cr4
  );
# 6683 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr0 (
  void
  );
# 6699 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr1 (
  void
  );
# 6715 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr2 (
  void
  );
# 6731 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr3 (
  void
  );
# 6747 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr4 (
  void
  );
# 6763 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr5 (
  void
  );
# 6779 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr6 (
  void
  );
# 6795 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmReadDr7 (
  void
  );
# 6812 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr0 (
  UINTN Dr0
  );
# 6829 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr1 (
  UINTN Dr1
  );
# 6846 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr2 (
  UINTN Dr2
  );
# 6863 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr3 (
  UINTN Dr3
  );
# 6880 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr4 (
  UINTN Dr4
  );
# 6897 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr5 (
  UINTN Dr5
  );
# 6914 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr6 (
  UINTN Dr6
  );
# 6931 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmWriteDr7 (
  UINTN Dr7
  );
# 6946 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadCs (
  void
  );
# 6961 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadDs (
  void
  );
# 6976 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadEs (
  void
  );
# 6991 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadFs (
  void
  );
# 7006 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadGs (
  void
  );
# 7021 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadSs (
  void
  );
# 7036 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadTr (
  void
  );
# 7053 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmReadGdtr (
  IA32_DESCRIPTOR *Gdtr
  );
# 7070 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteGdtr (
  const IA32_DESCRIPTOR *Gdtr
  );
# 7087 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmReadIdtr (
  IA32_DESCRIPTOR *Idtr
  );
# 7104 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteIdtr (
  const IA32_DESCRIPTOR *Idtr
  );
# 7119 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT16
__attribute__((cdecl))
AsmReadLdtr (
  void
  );
# 7134 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteLdtr (
  UINT16 Ldtr
  );
# 7153 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmFxSave (
  IA32_FX_BUFFER *Buffer
  );
# 7173 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmFxRestore (
  const IA32_FX_BUFFER *Buffer
  );
# 7188 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm0 (
  void
  );
# 7203 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm1 (
  void
  );
# 7218 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm2 (
  void
  );
# 7233 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm3 (
  void
  );
# 7248 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm4 (
  void
  );
# 7263 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm5 (
  void
  );
# 7278 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm6 (
  void
  );
# 7293 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadMm7 (
  void
  );
# 7308 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm0 (
  UINT64 Value
  );
# 7323 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm1 (
  UINT64 Value
  );
# 7338 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm2 (
  UINT64 Value
  );
# 7353 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm3 (
  UINT64 Value
  );
# 7368 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm4 (
  UINT64 Value
  );
# 7383 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm5 (
  UINT64 Value
  );
# 7398 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm6 (
  UINT64 Value
  );
# 7413 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWriteMm7 (
  UINT64 Value
  );
# 7428 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadTsc (
  void
  );
# 7445 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmReadPmc (
  UINT32 Index
  );
# 7467 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmMonitor (
  UINTN Eax,
  UINTN Ecx,
  UINTN Edx
  );
# 7489 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINTN
__attribute__((cdecl))
AsmMwait (
  UINTN Eax,
  UINTN Ecx
  );
# 7503 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmWbinvd (
  void
  );
# 7516 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmInvd (
  void
  );
# 7537 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void *
__attribute__((cdecl))
AsmFlushCacheLine (
  void *LinearAddress
  );
# 7580 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmEnablePaging32 (
  SWITCH_STACK_ENTRY_POINT EntryPoint,
  void *Context1 ,
  void *Context2 ,
  void *NewStack
  );
# 7623 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmDisablePaging32 (
  SWITCH_STACK_ENTRY_POINT EntryPoint,
  void *Context1 ,
  void *Context2 ,
  void *NewStack
  );
# 7664 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmEnablePaging64 (
  UINT16 Cs,
  UINT64 EntryPoint,
  UINT64 Context1 ,
  UINT64 Context2 ,
  UINT64 NewStack
  );
# 7704 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmDisablePaging64 (
  UINT16 Cs,
  UINT32 EntryPoint,
  UINT32 Context1 ,
  UINT32 Context2 ,
  UINT32 NewStack
  );
# 7739 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmGetThunk16Properties (
  UINT32 *RealModeBufferSize,
  UINT32 *ExtraStackSize
  );
# 7760 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmPrepareThunk16 (
  THUNK_CONTEXT *ThunkContext
  );
# 7819 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmThunk16 (
  THUNK_CONTEXT *ThunkContext
  );
# 7845 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmPrepareAndThunk16 (
  THUNK_CONTEXT *ThunkContext
  );
# 7862 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
AsmRdRand16 (
  UINT16 *Rand
  );
# 7879 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
AsmRdRand32 (
  UINT32 *Rand
  );
# 7896 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
BOOLEAN
__attribute__((cdecl))
AsmRdRand64 (
  UINT64 *Rand
  );






void
__attribute__((cdecl))
AsmWriteTr (
  UINT16 Selector
  );
# 7920 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmLfence (
  void
  );
# 7936 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmXGetBv (
  UINT32 Index
  );
# 7959 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT64
__attribute__((cdecl))
AsmXSetBv (
  UINT32 Index,
  UINT64 Value
  );
# 7973 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
AsmVmgExit (
  void
  );




typedef struct {
  void *Caa;
  UINT64 RaxIn;
  UINT64 RcxIn;
  UINT64 RdxIn;
  UINT64 R8In;
  UINT64 R9In;
  UINT64 RaxOut;
  UINT64 RcxOut;
  UINT64 RdxOut;
  UINT64 R8Out;
  UINT64 R9Out;
  UINT8 *CallPending;
} SVSM_CALL_DATA;
# 8012 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
UINT32
__attribute__((cdecl))
AsmVmgExitSvsm (
  SVSM_CALL_DATA *SvsmCallData
  );
# 8052 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/BaseLib.h"
void
__attribute__((cdecl))
PatchInstructionX86 (
  X86_ASSEMBLY_PATCH_LABEL *InstructionEnd,
  UINT64 PatchValue,
  UINTN ValueSize
  );
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/PciCfg2.h" 2




typedef struct _EFI_PEI_PCI_CFG2_PPI EFI_PEI_PCI_CFG2_PPI;
# 35 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/PciCfg2.h"
typedef enum {



  EfiPeiPciCfgWidthUint8 = 0,



  EfiPeiPciCfgWidthUint16 = 1,



  EfiPeiPciCfgWidthUint32 = 2,



  EfiPeiPciCfgWidthUint64 = 3,
  EfiPeiPciCfgWidthMaximum
} EFI_PEI_PCI_CFG_PPI_WIDTH;




typedef struct {




  UINT8 Register;




  UINT8 Function;



  UINT8 Device;



  UINT8 Bus;





  UINT32 ExtendedRegister;
} EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS;
# 109 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/PciCfg2.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_PCI_CFG2_PPI_IO)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PCI_CFG2_PPI *This,
  EFI_PEI_PCI_CFG_PPI_WIDTH Width,
  UINT64 Address,
  void *Buffer
  );
# 149 "/home/enyephy/edk2/edk2/MdePkg/Include/Ppi/PciCfg2.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_PCI_CFG2_PPI_RW)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PCI_CFG2_PPI *This,
  EFI_PEI_PCI_CFG_PPI_WIDTH Width,
  UINT64 Address,
  void *SetBits,
  void *ClearBits
  );





struct _EFI_PEI_PCI_CFG2_PPI {
  EFI_PEI_PCI_CFG2_PPI_IO Read;
  EFI_PEI_PCI_CFG2_PPI_IO Write;
  EFI_PEI_PCI_CFG2_PPI_RW Modify;



  UINT16 Segment;
};

extern EFI_GUID gEfiPciCfg2PpiGuid;
# 40 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h" 2
# 52 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEIM_ENTRY_POINT2)(
  EFI_PEI_FILE_HANDLE FileHandle,
  const EFI_PEI_SERVICES **PeiServices
  );
# 69 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEIM_NOTIFY_ENTRY_POINT)(
  EFI_PEI_SERVICES **PeiServices,
  EFI_PEI_NOTIFY_DESCRIPTOR *NotifyDescriptor,
  void *Ppi
  );
# 90 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef struct {




  UINTN Flags;



  EFI_GUID *Guid;



  void *Ppi;
} EFI_PEI_PPI_DESCRIPTOR;





struct _EFI_PEI_NOTIFY_DESCRIPTOR {



  UINTN Flags;



  EFI_GUID *Guid;



  EFI_PEIM_NOTIFY_ENTRY_POINT Notify;
};





typedef union {



  EFI_PEI_NOTIFY_DESCRIPTOR Notify;



  EFI_PEI_PPI_DESCRIPTOR Ppi;
} EFI_PEI_DESCRIPTOR;
# 157 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_INSTALL_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PPI_DESCRIPTOR *PpiList
  );
# 182 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_REINSTALL_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_PPI_DESCRIPTOR *OldPpi,
  const EFI_PEI_PPI_DESCRIPTOR *NewPpi
  );
# 203 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_LOCATE_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_GUID *Guid,
  UINTN Instance,
  EFI_PEI_PPI_DESCRIPTOR **PpiDescriptor ,
  void **Ppi
  );
# 228 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_NOTIFY_PPI)(
  const EFI_PEI_SERVICES **PeiServices,
  const EFI_PEI_NOTIFY_DESCRIPTOR *NotifyList
  );
# 244 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_GET_BOOT_MODE)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_BOOT_MODE *BootMode
  );
# 260 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_SET_BOOT_MODE)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_BOOT_MODE BootMode
  );
# 277 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_GET_HOB_LIST)(
  const EFI_PEI_SERVICES **PeiServices,
  void **HobList
  );
# 296 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_CREATE_HOB)(
  const EFI_PEI_SERVICES **PeiServices,
  UINT16 Type,
  UINT16 Length,
  void **Hob
  );
# 324 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_NEXT_VOLUME2)(
  const EFI_PEI_SERVICES **PeiServices,
  UINTN Instance,
  EFI_PEI_FV_HANDLE *VolumeHandle
  );
# 353 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_NEXT_FILE2)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_FV_FILETYPE SearchType,
  const EFI_PEI_FV_HANDLE FvHandle,
  EFI_PEI_FILE_HANDLE *FileHandle
  );
# 381 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_SECTION_DATA2)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_SECTION_TYPE SectionType,
  EFI_PEI_FILE_HANDLE FileHandle,
  void **SectionData
  );
# 411 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_SECTION_DATA3)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_SECTION_TYPE SectionType,
  UINTN SectionInstance,
  EFI_PEI_FILE_HANDLE FileHandle,
  void **SectionData,
  UINT32 *AuthenticationStatus
  );
# 434 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_INSTALL_PEI_MEMORY)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_PHYSICAL_ADDRESS MemoryBegin,
  UINT64 MemoryLength
  );
# 464 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_ALLOCATE_PAGES)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_MEMORY_TYPE MemoryType,
  UINTN Pages,
  EFI_PHYSICAL_ADDRESS *Memory
  );
# 486 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FREE_PAGES)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_PHYSICAL_ADDRESS Memory,
  UINTN Pages
  );
# 506 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_ALLOCATE_POOL)(
  const EFI_PEI_SERVICES **PeiServices,
  UINTN Size,
  void **Buffer
  );
# 522 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_COPY_MEM)(
  void *Destination,
  void *Source,
  UINTN Length
  );
# 538 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_SET_MEM)(
  void *Buffer,
  UINTN Size,
  UINT8 Value
  );
# 575 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_REPORT_STATUS_CODE)(
  const EFI_PEI_SERVICES **PeiServices,
  EFI_STATUS_CODE_TYPE Type,
  EFI_STATUS_CODE_VALUE Value,
  UINT32 Instance,
  const EFI_GUID *CallerId ,
  const EFI_STATUS_CODE_DATA *Data
  );
# 599 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_RESET_SYSTEM)(
  const EFI_PEI_SERVICES **PeiServices
  );
# 618 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_RESET2_SYSTEM)(
  EFI_RESET_TYPE ResetType,
  EFI_STATUS ResetStatus,
  UINTN DataSize,
  void *ResetData
  );
# 647 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_FIND_BY_NAME)(
  const EFI_GUID *FileName,
  EFI_PEI_FV_HANDLE VolumeHandle,
  EFI_PEI_FILE_HANDLE *FileHandle
  );




typedef struct {



  EFI_GUID FileName;



  EFI_FV_FILETYPE FileType;



  EFI_FV_FILE_ATTRIBUTES FileAttributes;





  void *Buffer;



  UINT32 BufferSize;
} EFI_FV_FILE_INFO;




typedef struct {



  EFI_GUID FileName;



  EFI_FV_FILETYPE FileType;



  EFI_FV_FILE_ATTRIBUTES FileAttributes;





  void *Buffer;



  UINT32 BufferSize;



  UINT32 AuthenticationStatus;
} EFI_FV_FILE_INFO2;
# 733 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_GET_FILE_INFO)(
  EFI_PEI_FILE_HANDLE FileHandle,
  EFI_FV_FILE_INFO *FileInfo
  );
# 757 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_GET_FILE_INFO2)(
  EFI_PEI_FILE_HANDLE FileHandle,
  EFI_FV_FILE_INFO2 *FileInfo
  );




typedef struct {



  EFI_FVB_ATTRIBUTES_2 FvAttributes;



  EFI_GUID FvFormat;



  EFI_GUID FvName;





  void *FvStart;



  UINT64 FvSize;
} EFI_FV_INFO;
# 809 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_FFS_GET_VOLUME_INFO)(
  EFI_PEI_FV_HANDLE VolumeHandle,
  EFI_FV_INFO *VolumeInfo
  );
# 840 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
EFI_STATUS
(__attribute__((cdecl)) *EFI_PEI_REGISTER_FOR_SHADOW)(
  EFI_PEI_FILE_HANDLE FileHandle
  );
# 877 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
struct _EFI_PEI_SERVICES {



  EFI_TABLE_HEADER Hdr;




  EFI_PEI_INSTALL_PPI InstallPpi;
  EFI_PEI_REINSTALL_PPI ReInstallPpi;
  EFI_PEI_LOCATE_PPI LocatePpi;
  EFI_PEI_NOTIFY_PPI NotifyPpi;




  EFI_PEI_GET_BOOT_MODE GetBootMode;
  EFI_PEI_SET_BOOT_MODE SetBootMode;




  EFI_PEI_GET_HOB_LIST GetHobList;
  EFI_PEI_CREATE_HOB CreateHob;




  EFI_PEI_FFS_FIND_NEXT_VOLUME2 FfsFindNextVolume;
  EFI_PEI_FFS_FIND_NEXT_FILE2 FfsFindNextFile;
  EFI_PEI_FFS_FIND_SECTION_DATA2 FfsFindSectionData;




  EFI_PEI_INSTALL_PEI_MEMORY InstallPeiMemory;
  EFI_PEI_ALLOCATE_PAGES AllocatePages;
  EFI_PEI_ALLOCATE_POOL AllocatePool;
  EFI_PEI_COPY_MEM CopyMem;
  EFI_PEI_SET_MEM SetMem;




  EFI_PEI_REPORT_STATUS_CODE ReportStatusCode;




  EFI_PEI_RESET_SYSTEM ResetSystem;





  EFI_PEI_CPU_IO_PPI *CpuIo;
  EFI_PEI_PCI_CFG2_PPI *PciCfg;




  EFI_PEI_FFS_FIND_BY_NAME FfsFindFileByName;
  EFI_PEI_FFS_GET_FILE_INFO FfsGetFileInfo;
  EFI_PEI_FFS_GET_VOLUME_INFO FfsGetVolumeInfo;
  EFI_PEI_REGISTER_FOR_SHADOW RegisterForShadow;
  EFI_PEI_FFS_FIND_SECTION_DATA3 FindSectionData3;
  EFI_PEI_FFS_GET_FILE_INFO2 FfsGetFileInfo2;
  EFI_PEI_RESET2_SYSTEM ResetSystem2;
  EFI_PEI_FREE_PAGES FreePages;
};






typedef struct _EFI_SEC_PEI_HAND_OFF {



  UINT16 DataSize;






  void *BootFirmwareVolumeBase;




  UINTN BootFirmwareVolumeSize;




  void *TemporaryRamBase;




  UINTN TemporaryRamSize;
# 991 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
  void *PeiTemporaryRamBase;





  UINTN PeiTemporaryRamSize;







  void *StackBase;




  UINTN StackSize;
} EFI_SEC_PEI_HAND_OFF;
# 1049 "/home/enyephy/edk2/edk2/MdePkg/Include/Pi/PiPeiCis.h"
typedef
void
(__attribute__((cdecl)) *EFI_PEI_CORE_ENTRY_POINT)(
  const EFI_SEC_PEI_HAND_OFF *SecCoreData,
  const EFI_PEI_PPI_DESCRIPTOR *PpiList
  );
# 19 "/home/enyephy/edk2/edk2/MdePkg/Include/PiPei.h" 2
# 17 "/home/enyephy/edk2/edk2/Build/OvmfIa32/RELEASE_GCC5/IA32/UefiCpuPkg/Library/CpuExceptionHandlerLib/SecPeiCpuExceptionHandlerLib/DEBUG/AutoGen.h" 2
# 1 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h" 1
# 809 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdSetSku (
  UINTN SkuId
  );
# 825 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT8
__attribute__((cdecl))
LibPcdGet8 (
  UINTN TokenNumber
  );
# 841 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT16
__attribute__((cdecl))
LibPcdGet16 (
  UINTN TokenNumber
  );
# 857 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT32
__attribute__((cdecl))
LibPcdGet32 (
  UINTN TokenNumber
  );
# 873 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT64
__attribute__((cdecl))
LibPcdGet64 (
  UINTN TokenNumber
  );
# 889 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPcdGetPtr (
  UINTN TokenNumber
  );
# 905 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
BOOLEAN
__attribute__((cdecl))
LibPcdGetBool (
  UINTN TokenNumber
  );
# 919 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetSize (
  UINTN TokenNumber
  );
# 939 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT8
__attribute__((cdecl))
LibPcdGetEx8 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 960 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT16
__attribute__((cdecl))
LibPcdGetEx16 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 978 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT32
__attribute__((cdecl))
LibPcdGetEx32 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 999 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINT64
__attribute__((cdecl))
LibPcdGetEx64 (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1020 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPcdGetExPtr (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1041 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
BOOLEAN
__attribute__((cdecl))
LibPcdGetExBool (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1062 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetExSize (
  const GUID *Guid,
  UINTN TokenNumber
  );
# 1081 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet8S (
  UINTN TokenNumber,
  UINT8 Value
  );
# 1100 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet16S (
  UINTN TokenNumber,
  UINT16 Value
  );
# 1119 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet32S (
  UINTN TokenNumber,
  UINT32 Value
  );
# 1138 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSet64S (
  UINTN TokenNumber,
  UINT64 Value
  );
# 1167 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetPtrS (
  UINTN TokenNumber,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1187 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetBoolS (
  UINTN TokenNumber,
  BOOLEAN Value
  );
# 1210 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx8S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT8 Value
  );
# 1234 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx16S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT16 Value
  );
# 1258 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx32S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT32 Value
  );
# 1282 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetEx64S (
  const GUID *Guid,
  UINTN TokenNumber,
  UINT64 Value
  );
# 1312 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetExPtrS (
  const GUID *Guid,
  UINTN TokenNumber,
  UINTN *SizeOfBuffer,
  void *Buffer
  );
# 1337 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPcdSetExBoolS (
  const GUID *Guid,
  UINTN TokenNumber,
  BOOLEAN Value
  );
# 1361 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
typedef
void
(__attribute__((cdecl)) *PCD_CALLBACK)(
  const GUID *CallBackGuid ,
  UINTN CallBackToken,
  void *TokenData,
  UINTN TokenDataSize
  );
# 1386 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdCallbackOnSet (
  const GUID *Guid ,
  UINTN TokenNumber,
  PCD_CALLBACK NotificationFunction
  );
# 1407 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdCancelCallback (
  const GUID *Guid ,
  UINTN TokenNumber,
  PCD_CALLBACK NotificationFunction
  );
# 1434 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetNextToken (
  const GUID *Guid ,
  UINTN TokenNumber
  );
# 1454 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
GUID *
__attribute__((cdecl))
LibPcdGetNextTokenSpace (
  const GUID *TokenSpaceGuid
  );
# 1483 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPatchPcdSetPtr (
  void *PatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1515 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPatchPcdSetPtrS (
  void *PatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1549 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void *
__attribute__((cdecl))
LibPatchPcdSetPtrAndSize (
  void *PatchVariable,
  UINTN *SizeOfPatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );
# 1584 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
RETURN_STATUS
__attribute__((cdecl))
LibPatchPcdSetPtrAndSizeS (
  void *PatchVariable,
  UINTN *SizeOfPatchVariable,
  UINTN MaximumDatumSize,
  UINTN *SizeOfBuffer,
  const void *Buffer
  );

typedef enum {
  PCD_TYPE_8,
  PCD_TYPE_16,
  PCD_TYPE_32,
  PCD_TYPE_64,
  PCD_TYPE_BOOL,
  PCD_TYPE_PTR
} PCD_TYPE;

typedef struct {




  PCD_TYPE PcdType;




  UINTN PcdSize;






  CHAR8 *PcdName;
} PCD_INFO;
# 1635 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdGetInfo (
  UINTN TokenNumber,
  PCD_INFO *PcdInfo
  );
# 1655 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
void
__attribute__((cdecl))
LibPcdGetInfoEx (
  const GUID *Guid,
  UINTN TokenNumber,
  PCD_INFO *PcdInfo
  );
# 1670 "/home/enyephy/edk2/edk2/MdePkg/Include/Library/PcdLib.h"
UINTN
__attribute__((cdecl))
LibPcdGetSku (
  void
  );
# 18 "/home/enyephy/edk2/edk2/Build/OvmfIa32/RELEASE_GCC5/IA32/UefiCpuPkg/Library/CpuExceptionHandlerLib/SecPeiCpuExceptionHandlerLib/DEBUG/AutoGen.h" 2

extern GUID gEfiCallerIdGuid;
extern GUID gEdkiiDscPlatformGuid;
extern CHAR8 *gEfiCallerBaseName;




extern EFI_GUID gUefiCpuPkgTokenSpaceGuid;
extern EFI_GUID gEfiMdeModulePkgTokenSpaceGuid;


extern UINT64 _gPcd_SkuId_Array[];



extern const BOOLEAN _gPcd_FixedAtBuild_PcdCpuSmmStackGuard;



extern const BOOLEAN _gPcd_FixedAtBuild_PcdCpuStackGuard;






extern const UINT8 _gPcd_FixedAtBuild_PcdCpuStackSwitchExceptionList[];






extern const UINT32 _gPcd_FixedAtBuild_PcdCpuKnownGoodStackSize;
# 0 "<command-line>" 2
# 1 "/home/enyephy/edk2/edk2/UefiCpuPkg/Library/CpuExceptionHandlerLib/Ia32/ExceptionHandlerAsm.nasm"
;------------------------------------------------------------------------------ ;
; Copyright (c) 2016 - 2022, Intel Corporation. All rights reserved.<BR>
; SPDX-License-Identifier: BSD-2-Clause-Patent
;
; Module Name:
;
; ExceptionHandlerAsm.Asm
;
; Abstract:
;
; IA32 CPU Exception Handler
;
; Notes:
;
;------------------------------------------------------------------------------

;
; CommonExceptionHandler()
;
extern CommonExceptionHandler

SECTION .data

extern mErrorCodeFlag ; Error code flags for exceptions
extern mDoFarReturnFlag ; Do far return flag

SECTION .text

ALIGN 8

;
; exception handler stub table
;
AsmIdtVectorBegin:
%assign Vector 0
%rep 256
    push strict dword %[Vector];
    push eax
    mov eax, CommonInterruptEntry
    jmp eax
%assign Vector Vector+1
%endrep
AsmIdtVectorEnd:

HookAfterStubBegin:
    push strict dword 0 ; 0 will be fixed
VectorNum:
    push eax
    mov eax, HookAfterStubHeaderEnd
    jmp eax
HookAfterStubHeaderEnd:
    pop eax
    sub esp, 8 ; reserve room for filling exception data later
    push dword [esp + 8]
    xchg ecx, [esp] ; get vector number
    bt [mErrorCodeFlag], ecx
    jnc .0
    push dword [esp] ; addition push if exception data needed
.0:
    xchg ecx, [esp] ; restore ecx
    push eax

;----------------------------------------------------------------------------;
; CommonInterruptEntry ;
;----------------------------------------------------------------------------;
; The follow algorithm is used for the common interrupt routine.
; Entry from each interrupt with a push eax and eax=interrupt number
; Stack:
; +---------------------+
; + EFlags +
; +---------------------+
; + CS +
; +---------------------+
; + EIP +
; +---------------------+
; + Error Code +
; +---------------------+
; + Vector Number +
; +---------------------+
; + EBP +
; +---------------------+ <-- EBP
global CommonInterruptEntry
CommonInterruptEntry:
    cli
    pop eax
    ;
    ; All interrupt handlers are invoked through interrupt gates, so
    ; IF flag automatically cleared at the entry point
    ;

    ;
    ; Get vector number from top of stack
    ;
    xchg ecx, [esp]
    and ecx, 0xFF ; Vector number should be less than 256
    cmp ecx, 32 ; Intel reserved vector for exceptions?
    jae NoErrorCode
    bt [mErrorCodeFlag], ecx
    jc HasErrorCode

NoErrorCode:

    ;
    ; Stack:
    ; +---------------------+
    ; + EFlags +
    ; +---------------------+
    ; + CS +
    ; +---------------------+
    ; + EIP +
    ; +---------------------+
    ; + ECX +
    ; +---------------------+ <-- ESP
    ;
    ; Registers:
    ; ECX - Vector Number
    ;

    ;
    ; Put Vector Number on stack
    ;
    push ecx

    ;
    ; Put 0 (dummy) error code on stack, and restore ECX
    ;
    xor ecx, ecx ; ECX = 0
    xchg ecx, [esp+4]

    jmp ErrorCodeAndVectorOnStack

HasErrorCode:

    ;
    ; Stack:
    ; +---------------------+
    ; + EFlags +
    ; +---------------------+
    ; + CS +
    ; +---------------------+
    ; + EIP +
    ; +---------------------+
    ; + Error Code +
    ; +---------------------+
    ; + ECX +
    ; +---------------------+ <-- ESP
    ;
    ; Registers:
    ; ECX - Vector Number
    ;

    ;
    ; Put Vector Number on stack and restore ECX
    ;
    xchg ecx, [esp]

ErrorCodeAndVectorOnStack:
    push ebp
    mov ebp, esp

    ;
    ; Stack:
    ; +---------------------+
    ; + EFlags +
    ; +---------------------+
    ; + CS +
    ; +---------------------+
    ; + EIP +
    ; +---------------------+
    ; + Error Code +
    ; +---------------------+
    ; + Vector Number +
    ; +---------------------+
    ; + EBP +
    ; +---------------------+ <-- EBP
    ;

    ;
    ; Align stack to make sure that EFI_FX_SAVE_STATE_IA32 of EFI_SYSTEM_CONTEXT_IA32
    ; is 16-byte aligned
    ;
    and esp, 0xfffffff0
    sub esp, 12

    sub esp, 8
    push 0 ; clear EXCEPTION_HANDLER_CONTEXT.OldIdtHandler
    push 0 ; clear EXCEPTION_HANDLER_CONTEXT.ExceptionDataFlag

;; UINT32 Edi, Esi, Ebp, Esp, Ebx, Edx, Ecx, Eax;
    push eax
    push ecx
    push edx
    push ebx
    lea ecx, [ebp + 6 * 4]
    push ecx ; ESP
    push dword [ebp] ; EBP
    push esi
    push edi

;; UINT32 Gs, Fs, Es, Ds, Cs, Ss;
    mov eax, ss
    push eax
    movzx eax, word [ebp + 4 * 4]
    push eax
    mov eax, ds
    push eax
    mov eax, es
    push eax
    mov eax, fs
    push eax
    mov eax, gs
    push eax

;; UINT32 Eip;
    mov eax, [ebp + 3 * 4]
    push eax

;; UINT32 Gdtr[2], Idtr[2];
    sub esp, 8
    sidt [esp]
    mov eax, [esp + 2]
    xchg eax, [esp]
    and eax, 0xFFFF
    mov [esp+4], eax

    sub esp, 8
    sgdt [esp]
    mov eax, [esp + 2]
    xchg eax, [esp]
    and eax, 0xFFFF
    mov [esp+4], eax

;; UINT32 Ldtr, Tr;
    xor eax, eax
    str ax
    push eax
    sldt ax
    push eax

;; UINT32 EFlags;
    mov eax, [ebp + 5 * 4]
    push eax

;; UINT32 Cr0, Cr1, Cr2, Cr3, Cr4;
    mov eax, 1
    push ebx ; temporarily save value of ebx on stack
    cpuid ; use CPUID to determine if FXSAVE/FXRESTOR and DE
                        ; are supported
    pop ebx ; retore value of ebx that was overwritten by CPUID
    mov eax, cr4
    push eax ; push cr4 firstly
    test edx, 0x01000000 ; Test for FXSAVE/FXRESTOR support
    jz .1
    or eax, 0x00000200 ; Set CR4.OSFXSR
.1:
    test edx, 0x00000004 ; Test for Debugging Extensions support
    jz .2
    or eax, 0x00000008 ; Set CR4.DE
.2:
    mov cr4, eax
    mov eax, cr3
    push eax
    mov eax, cr2
    push eax
    xor eax, eax
    push eax
    mov eax, cr0
    push eax

;; UINT32 Dr0, Dr1, Dr2, Dr3, Dr6, Dr7;
    mov eax, dr7
    push eax
    mov eax, dr6
    push eax
    mov eax, dr3
    push eax
    mov eax, dr2
    push eax
    mov eax, dr1
    push eax
    mov eax, dr0
    push eax

;; FX_SAVE_STATE_IA32 FxSaveState;
    sub esp, 512
    mov edi, esp
    test edx, 0x01000000 ; Test for FXSAVE/FXRESTOR support.
                        ; edx still contains result from CPUID above
    jz .3
    fxsave [edi]
.3:

;; UEFI calling convention for IA32 requires that Direction flag in EFLAGs is clear
    cld

;; UINT32 ExceptionData;
    push dword [ebp + 2 * 4]

;; Prepare parameter and call
    mov edx, esp
    push edx
    mov edx, dword [ebp + 1 * 4]
    push edx

    ;
    ; Call External Exception Handler
    ;
    mov eax, CommonExceptionHandler
    call eax
    add esp, 8

    cli
;; UINT32 ExceptionData;
    add esp, 4

;; FX_SAVE_STATE_IA32 FxSaveState;
    mov esi, esp
    mov eax, 1
    cpuid ; use CPUID to determine if FXSAVE/FXRESTOR
                        ; are supported
    test edx, 0x01000000 ; Test for FXSAVE/FXRESTOR support
    jz .4
    fxrstor [esi]
.4:
    add esp, 512

;; UINT32 Dr0, Dr1, Dr2, Dr3, Dr6, Dr7;
;; Skip restoration of DRx registers to support in-circuit emualators
;; or debuggers set breakpoint in interrupt/exception context
    add esp, 4 * 6

;; UINT32 Cr0, Cr1, Cr2, Cr3, Cr4;
    pop eax
    mov cr0, eax
    add esp, 4 ; not for Cr1
    pop eax
    mov cr2, eax
    pop eax
    mov cr3, eax
    pop eax
    mov cr4, eax

;; UINT32 EFlags;
    pop dword [ebp + 5 * 4]

;; UINT32 Ldtr, Tr;
;; UINT32 Gdtr[2], Idtr[2];
;; Best not let anyone mess with these particular registers...
    add esp, 24

;; UINT32 Eip;
    pop dword [ebp + 3 * 4]

;; UINT32 Gs, Fs, Es, Ds, Cs, Ss;
;; NOTE - modified segment registers could hang the debugger... We
;; could attempt to insulate ourselves against this possibility,
;; but that poses risks as well.
;;
    pop gs
    pop fs
    pop es
    pop ds
    pop dword [ebp + 4 * 4]
    pop ss

;; UINT32 Edi, Esi, Ebp, Esp, Ebx, Edx, Ecx, Eax;
    pop edi
    pop esi
    add esp, 4 ; not for ebp
    add esp, 4 ; not for esp
    pop ebx
    pop edx
    pop ecx
    pop eax

    pop dword [ebp - 8]
    pop dword [ebp - 4]
    mov esp, ebp
    pop ebp
    add esp, 8
    cmp dword [esp - 16], 0 ; check EXCEPTION_HANDLER_CONTEXT.OldIdtHandler
    jz DoReturn
    cmp dword [esp - 20], 1 ; check EXCEPTION_HANDLER_CONTEXT.ExceptionDataFlag
    jz ErrorCode
    jmp dword [esp - 16]
ErrorCode:
    sub esp, 4
    jmp dword [esp - 12]

DoReturn:
    cmp dword [mDoFarReturnFlag], 0 ; Check if need to do far return instead of IRET
    jz DoIret
    push dword [esp + 8] ; save EFLAGS
    add esp, 16
    push dword [esp - 8] ; save CS in new location
    push dword [esp - 8] ; save EIP in new location
    push dword [esp - 8] ; save EFLAGS in new location
    popfd ; restore EFLAGS
    retf ; far return

DoIret:
    iretd

;---------------------------------------;
; _AsmGetTemplateAddressMap ;
;----------------------------------------------------------------------------;
;
; Protocol prototype
; AsmGetTemplateAddressMap (
; EXCEPTION_HANDLER_TEMPLATE_MAP *AddressMap
; );
;
; Routine Description:
;
; Return address map of interrupt handler template so that C code can generate
; interrupt table.
;
; Arguments:
;
;
; Returns:
;
; Nothing
;
;
; Input: [ebp][0] = Original ebp
; [ebp][4] = Return address
;
; Output: Nothing
;
; Destroys: Nothing
;-----------------------------------------------------------------------------;
global AsmGetTemplateAddressMap
AsmGetTemplateAddressMap:
    push ebp ; C prolog
    mov ebp, esp
    pushad

    mov ebx, dword [ebp + 0x8]
    mov dword [ebx], AsmIdtVectorBegin
    mov dword [ebx + 0x4], (AsmIdtVectorEnd - AsmIdtVectorBegin) / 256
    mov dword [ebx + 0x8], HookAfterStubBegin

    popad
    pop ebp
    ret

;-------------------------------------------------------------------------------------
; AsmVectorNumFixup (*NewVectorAddr, VectorNum, *OldVectorAddr);
;-------------------------------------------------------------------------------------
global AsmVectorNumFixup
AsmVectorNumFixup:
    mov eax, dword [esp + 8]
    mov ecx, [esp + 4]
    mov [ecx + (VectorNum - 4 - HookAfterStubBegin)], al
    ret
